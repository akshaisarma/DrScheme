#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file is in PLT Scheme editor format.
   Open this file in DrScheme version 370 or later to read it.

   Most likely, it was created by saving a program in DrScheme,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://www.plt-scheme.org
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wxmedia\0"
4 1 8 #"wximage\0"
2 0 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 56
(
 #"(lib \"hrule-snip.ss\" \"macro-debugger\" \"syntax-browse"
 #"r\")\0"
) 1 0 18 #"java-comment-box%\0"
1 0 23 #"java-interactions-box%\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55
(
 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private"
 #"\")\0"
) 1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
00000000000 1 59 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 15
#"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 27
#"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 14
#"Html Standard\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drscheme:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drscheme:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 35
#"profj:syntax-colors:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 0 139 0 0 0 -1 -1 2 37
#"profj:syntax-colors:scheme:prim-type\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 0 139 0 0 0 -1 -1 2 38
#"profj:syntax-colors:scheme:identifier\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 34
#"profj:syntax-colors:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 35
#"profj:syntax-colors:scheme:literal\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 35
#"profj:syntax-colors:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
33 #"profj:syntax-colors:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 35
#"profj:syntax-colors:scheme:default\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 37
#"profj:syntax-colors:scheme:uncovered\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 35
#"profj:syntax-colors:scheme:covered\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 0 139 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 4 4
#"XML\0"
0 70 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 8 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 8 24
#"drscheme:text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 0 1
#"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 1
#"\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 128 0 0 0 0 -1 -1 0 1
#"\0"
0 75 12 #"Courier New\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 4 1
#"\0"
0 71 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 100 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 70 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 148 0 211 0 0 0 -1 -1 2 1
#"\0"
0 70 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1
00000000003 0 00000000000 7 00000000000 1 00000000000 1209 0 17 3 14
#"; Akshai Sarma"
0 0 4 29 1 #"\n"
0 0 17 3 32 #"; akshai.sarma@macaulay.cuny.edu"
0 0 4 29 1 #"\n"
0 0 17 3 20 #"; CSc 335 Homework 4"
0 0 4 29 1 #"\n"
0 0 17 3 37 #"; Due Friday, October 15, at midnight"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 34 #";;;you missed one case in part a. "
0 0 4 29 1 #"\n"
0 0 17 3 12 #";;;good job."
0 0 4 29 1 #"\n"
0 0 17 3 4 #";;;A"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 77
(
 #"; Your solutions should be emailed as a drscheme executable file to"
 #" Mr. Wu.  "
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 43 #"; I ask that you work alone on this problem"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 48 #"; This problem is due to Friedman and Felleisen."
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 53 #"; An L-expression is an S-expression which is either:"
0 0 4 29 1 #"\n"
0 0 17 3 19 #";   (AND l1 l2), or"
0 0 4 29 1 #"\n"
0 0 17 3 18 #";   (OR l1 l2), or"
0 0 4 29 1 #"\n"
0 0 17 3 15 #";   (NOT l), or"
0 0 4 29 1 #"\n"
0 0 17 3 49 #";   an arbitrary symbol, which we call a variable"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 86
(
 #"; Here l1 and l2 are arbitrary L-expressions, so this is an inducti"
 #"ve definition once "
) 0 0 4 29 1 #"\n"
0 0 17 3 46 #"; we add 'and nothing else is an L-expression'"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 99
(
 #"; (a) Write and certify the function lexp? which checks whether an "
 #"S-expression is an L-expression."
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 106
(
 #"; (b) Write and certify the function covered? of an L-expression le"
 #"xp and a list of symbols los that tests"
) 0 0 4 29 1 #"\n"
0 0 17 3 51 #";     whether all the variables in lexp are in los."
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 93
(
 #"; (c) For the evaluation of L-expressions we need association lists"
 #", or alists.  An alist for"
) 0 0 4 29 1 #"\n"
0 0 17 3 105
(
 #";     L-expressions is a list of (variable, value) pairs.  The vari"
 #"able component is always a symbol, and"
) 0 0 4 29 1 #"\n"
0 0 17 3 108
(
 #";     the value component is either the number 0 (for false) or 1 ("
 #"for true). Write and certify the function"
) 0 0 4 29 1 #"\n"
0 0 17 3 96
(
 #";     lookup of the symbol var and the association list al, so that"
 #" (lookup var al) returns the "
) 0 0 4 29 1 #"\n"
0 0 17 3 60
#";     value of the first pair in al whose car is eq? to var."
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 104
(
 #"; (d) If the list of symbols in an alist for L-expressions contains"
 #" all the variables of an L-expression"
) 0 0 4 29 1 #"\n"
0 0 17 3 113
(
 #";     lexp, then lexp is called _closed_, and can be evaluated with"
 #" respect to this alist.  Write and certify the"
) 0 0 4 29 1 #"\n"
0 0 17 3 105
(
 #";     function value of an L-expression lexp and an alist al, which"
 #", after verifying that lexp is closed,"
) 0 0 4 29 1 #"\n"
0 0 17 3 101
(
 #";     determines whether lexp means true or false.  If lexp is not "
 #"closed in al, then (value lexp al)"
) 0 0 4 29 1 #"\n"
0 0 17 3 43 #";     should return the symbol not-covered."
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 82
(
 #";===============================Answers============================"
 #"==============="
) 0 0 4 29 1 #"\n"
0 0 17 3 108
(
 #"; *Note: I assume symbol in this homework means atom. However, if c"
 #"haracters were intended instead of atoms,"
) 0 0 4 29 1 #"\n"
0 0 17 3 99
(
 #";        all programs still work correctly because any possible val"
 #"ue for symbol is always an atom."
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 10 #";a  Answer"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 5 #"atom?"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"pair?"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 5 #"lexp?"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"sexp"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 5 #"atom?"
0 0 4 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 17 3 36 #";;;you forgot to check the null case"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"NOT"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 4 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"lexp?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 2 #"or"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 1 #")"
0 0 20 3 1 #"'"
0 0 14 3 3 #"AND"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"OR"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"length"
0 0 4 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"lexp?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"lexp?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"caddr"
0 0 4 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 7 00000008251 4 00000000000 1 00000000000 1374 0 14 3 13
#"Certification"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"To"
0 0 2 3 1 #" "
0 0 14 3 5 #"prove"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 5 #"lexp?"
0 0 2 3 1 #" "
0 0 14 3 5 #"works"
0 0 2 3 1 #" "
0 0 14 3 9 #"correctly"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"lexp?"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 20 3 2 #"#f"
0 0 2 3 1 #" "
0 0 14 3 3 #"iff"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 14 3 12 #"l-expression"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 20 3 2 #"#t"
0 0 2 3 1 #" "
0 0 14 3 9 #"otherwise"
0 0 26 3 1 #","
0 0 2 29 1 #"\n"
0 0 14 3 1 #"I"
0 0 2 3 1 #" "
0 0 14 3 5 #"argue"
0 0 2 3 1 #" "
0 0 14 3 2 #"by"
0 0 2 3 1 #" "
0 0 14 3 9 #"induction"
0 0 2 3 1 #" "
0 0 14 3 2 #"on"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"tree"
0 0 2 3 1 #" "
0 0 14 3 14 #"representation"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 12 #"s-expression"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"sexp."
0 0 2 3 1 #" "
0 0 14 3 4 #"Also"
0 0 2 3 1 #" "
0 0 14 3 2 #"by"
0 0 2 3 1 #" "
0 0 19 3 22 #"\"any arbitrary symbol\""
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 1 #"I"
0 0 2 3 1 #" "
0 0 14 3 6 #"assume"
0 0 2 29 1 #"\n"
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 14 3 4 #"atom"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 4 #"just"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"one"
0 0 2 3 1 #" "
0 0 14 3 9 #"character"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 13 #"l-expression."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 4 #"Base"
0 0 2 3 1 #" "
0 0 14 3 4 #"Case"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 14 3 4 #"atom"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"lexp?"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 20 3 2 #"#t"
0 0 2 3 1 #" "
0 0 14 3 7 #"because"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 14 3 4 #"atom"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 14 3 13 #"l-expression."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 9 #"Inductive"
0 0 2 3 1 #" "
0 0 14 3 10 #"Hypothesis"
0 0 2 29 1 #"\n"
0 0 14 3 3 #"For"
0 0 2 3 1 #" "
0 0 14 3 3 #"all"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 2 3 1 #" "
0 0 19 3 9 #"\"smaller\""
0 0 2 3 1 #" "
0 0 14 3 4 #"than"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"current"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"lexp?"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 6 #"value."
0 0 2 3 1 #" "
0 0 14 3 4 #"That"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 20 3 2 #"#t"
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 12 #"l-expression"
0 0 2 29 1 #"\n"
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 20 3 2 #"#f"
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 14 3 4 #"not."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 9 #"Inductive"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 14 3 4 #"atom"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 4 #"pair"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 3 #"has"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 4 #"cdr."
0 0 2 3 1 #" "
0 0 14 3 3 #"Its"
0 0 2 3 1 #" "
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 5 #"equal"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"NOT"
0 0 2 3 1 #" "
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 4 #"not."
0 0 2 3 1 #" "
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"NOT"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 9 #"computed."
0 0 2 3 2 #"  "
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 6 #"length"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 20 3 1 #"2"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 20 3 2 #"#f"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 20 3 2 #"#f"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 13 #"l-expression."
0 0 2 3 1 #" "
0 0 14 3 4 #"This"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 7 #"because"
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"NOT"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 2 3 1 #" "
0 0 14 3 4 #"must"
0 0 2 3 1 #" "
0 0 14 3 4 #"have"
0 0 2 3 1 #" "
0 0 14 3 6 #"length"
0 0 2 3 1 #" "
0 0 20 3 1 #"2"
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 14 3 3 #"NOT"
0 0 2 29 1 #"\n"
0 0 14 3 3 #"can"
0 0 2 3 1 #" "
0 0 14 3 4 #"only"
0 0 2 3 1 #" "
0 0 14 3 2 #"be"
0 0 2 3 1 #" "
0 0 14 3 7 #"applied"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 3 #"one"
0 0 2 3 1 #" "
0 0 14 3 7 #"logical"
0 0 2 3 1 #" "
0 0 14 3 11 #"expression."
0 0 2 3 1 #" "
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 6 #"length"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 20 3 1 #"2"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 20 3 2 #"#t"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 29 1 #"\n"
0 0 14 3 3 #"..."
0 0 2 3 1 #" "
0 0 14 3 5 #"which"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"lexp?"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 2 #"))"
0 0 26 3 1 #"."
0 0 2 3 1 #" "
0 0 14 3 5 #"Since"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 2 #"))"
0 0 2 3 1 #" "
0 0 14 3 6 #"exists"
0 0 2 3 1 #" "
0 0 14 3 7 #"because"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 2 3 1 #" "
0 0 14 3 3 #"has"
0 0 2 3 1 #" "
0 0 14 3 6 #"length"
0 0 2 3 1 #" "
0 0 20 3 1 #"2"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 19 3 10 #"\"narrower\""
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 19 3 9 #"\"shorter\""
0 0 2 29 1 #"\n"
0 0 14 3 4 #"than"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"tree"
0 0 2 3 1 #" "
0 0 14 3 14 #"representation"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"lexp?"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 2 #"))"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 2 #"by"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 3 #"IH."
0 0 2 3 1 #" "
0 0 14 3 9 #"Therefore"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"NOT"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 12 #"l-expression"
0 0 2 3 1 #" "
0 0 14 3 7 #"exactly"
0 0 2 3 1 #" "
0 0 15 3 4 #"when"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 6 #"length"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 20 3 1 #"2"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 13 #"l-expression."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 3 #"exp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"NOT"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 6 #"either"
0 0 2 3 1 #" "
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"AND"
0 0 2 3 1 #" "
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"OR"
0 0 2 3 1 #" "
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 4 #"not."
0 0 2 3 1 #" "
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"AND"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 20 3 2 #"#t"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 20 3 2 #"#t"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 11 #"executed.If"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"AND"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 20 3 2 #"#f"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"which"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 4 #"true"
0 0 2 3 1 #" "
0 0 14 3 7 #"exactly"
0 0 2 3 1 #" "
0 0 15 3 4 #"when"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"OR"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 5 #"false"
0 0 2 3 1 #" "
0 0 15 3 4 #"when"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 4 #"not."
0 0 2 3 1 #" "
0 0 14 3 9 #"Therefore"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"AND"
0 0 2 3 1 #" "
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"OR"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 6 #"either"
0 0 2 3 1 #" "
0 0 15 3 4 #"case"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 10 #"performed."
0 0 2 3 1 #" "
0 0 14 3 3 #"Now"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 14 3 6 #"length"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 20 3 1 #"3"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 20 3 2 #"#f"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 20 3 2 #"#f"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 13 #"l-expression."
0 0 2 3 1 #" "
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 6 #"length"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 20 3 1 #"3"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 20 3 2 #"#t"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 29 1 #"\n"
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 26 3 1 #"."
0 0 2 3 1 #" "
0 0 14 3 4 #"This"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 7 #"because"
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 6 #"either"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"AND"
0 0 2 3 1 #" "
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"OR"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 6 #"length"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 2 3 1 #" "
0 0 14 3 4 #"must"
0 0 2 3 1 #" "
0 0 14 3 2 #"be"
0 0 2 3 1 #" "
0 0 14 3 7 #"exactly"
0 0 2 29 1 #"\n"
0 0 20 3 1 #"3"
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 2 #"be"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 14 3 13 #"l-expression."
0 0 2 3 1 #" "
0 0 14 3 3 #"Now"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"lexp?"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"applied"
0 0 2 3 1 #" "
0 0 14 3 11 #"recursively"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 1 #")"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"which"
0 0 2 3 1 #" "
0 0 14 3 6 #"exists"
0 0 2 3 1 #" "
0 0 14 3 7 #"because"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 2 3 1 #" "
0 0 14 3 3 #"has"
0 0 2 29 1 #"\n"
0 0 14 3 6 #"length"
0 0 2 3 1 #" "
0 0 20 3 2 #"3."
0 0 2 3 1 #" "
0 0 14 3 4 #"Also"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 2 #"))"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 8 #"narrower"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 7 #"shorter"
0 0 2 3 1 #" "
0 0 14 3 4 #"than"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"tree"
0 0 2 3 1 #" "
0 0 14 3 14 #"representation"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 2 #"by"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 2 #"IH"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 6 #"value."
0 0 2 3 1 #" "
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 4 #"this"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 20 3 2 #"#f"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 20 3 2 #"#f"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 20 3 2 #"#f"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 14 3 13 #"l-expression."
0 0 2 3 1 #" "
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 12 #"l-expression"
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 20 3 2 #"#t"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"which"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"lexp?"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"caddr"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 2 #"))"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"which"
0 0 2 3 1 #" "
0 0 14 3 6 #"exists"
0 0 2 3 1 #" "
0 0 14 3 7 #"because"
0 0 2 29 1 #"\n"
0 0 14 3 4 #"sexp"
0 0 2 3 1 #" "
0 0 14 3 3 #"has"
0 0 2 3 1 #" "
0 0 14 3 6 #"length"
0 0 2 3 1 #" "
0 0 20 3 2 #"3."
0 0 2 3 1 #" "
0 0 14 3 3 #"Now"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 22 3 3 #")))"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"shorter"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 8 #"narrower"
0 0 2 3 1 #" "
0 0 14 3 4 #"than"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 2 #"by"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 2 #"IH"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"this"
0 0 2 3 1 #" "
0 0 14 3 4 #"call"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 6 #"value."
0 0 2 3 1 #" "
0 0 14 3 9 #"Therefore"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"AND"
0 0 2 3 1 #" "
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"OR"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 12 #"l-expression"
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 3 #"has"
0 0 2 3 1 #" "
0 0 14 3 6 #"length"
0 0 2 3 1 #" "
0 0 20 3 1 #"3"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 4 #"cadr"
0 0 2 29 1 #"\n"
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 5 #"caddr"
0 0 2 3 1 #" "
0 0 14 3 3 #"are"
0 0 2 3 1 #" "
0 0 14 3 4 #"both"
0 0 2 3 1 #" "
0 0 14 3 13 #"l-expressions"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 9 #"otherwise"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 4 #"not."
0 0 2 3 1 #" "
0 0 14 3 9 #"Therefore"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"lexp?"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 6 #"answer"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 4 #"this"
0 0 2 3 1 #" "
0 0 14 3 5 #"case."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 4 #"sexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 14 3 4 #"atom"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 3 #"NOT"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"AND"
0 0 2 3 1 #" "
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 14 3 2 #"OR"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"clearly"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 14 3 12 #"l-expression"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 5 #"lexp?"
0 0 2 29 1 #"\n"
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 20 3 2 #"#f"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 7 #"should."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 9 #"Therefore"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"for"
0 0 2 3 1 #" "
0 0 14 3 3 #"all"
0 0 2 3 1 #" "
0 0 14 3 8 #"possible"
0 0 2 3 1 #" "
0 0 14 3 6 #"inputs"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"lexp?"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 6 #"value."
0 0 2 3 53 #"                                                     "
0 0 2 29 1 #"\n"
0 00000000000 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 10 #";b  Answer"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 8 #"covered?"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"lexp"
0 0 4 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 5 #"atom?"
0 0 4 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"found?"
0 0 4 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 4 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"NOT"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"covered?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"covered?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"covered?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"caddr"
0 0 4 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 6 #"found?"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"var"
0 0 4 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 6 #"found?"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 7 00000006931 4 00000000000 1 00000000000 1154 0 14 3 13
#"Certification"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"To"
0 0 2 3 1 #" "
0 0 14 3 5 #"prove"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 11 #"correctness"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 8 #"covered?"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 1 #"I"
0 0 2 3 1 #" "
0 0 14 3 5 #"first"
0 0 2 3 1 #" "
0 0 14 3 5 #"prove"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 11 #"correctness"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 6 #"helper"
0 0 2 3 1 #" "
0 0 14 3 8 #"function"
0 0 2 3 1 #" "
0 0 14 3 6 #"found?"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 6 #"found?"
0 0 2 3 1 #" "
0 0 14 3 5 #"takes"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 3 #"var"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"which"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 14 3 4 #"atom"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 3 #"los"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 7 #"symbols"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 5 #"atoms"
0 0 22 3 2 #"))"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 20 3 2 #"#t"
0 0 2 3 1 #" "
0 0 14 3 3 #"iff"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"atom"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"present"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 3 #"los"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 20 3 2 #"#f"
0 0 2 3 1 #" "
0 0 14 3 10 #"otherwise."
0 0 2 3 1 #" "
0 0 14 3 1 #"I"
0 0 2 3 1 #" "
0 0 14 3 6 #"induct"
0 0 2 3 1 #" "
0 0 14 3 2 #"on"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 6 #"length"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 4 #"los."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 6 #"found?"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 4 #"Base"
0 0 2 3 1 #" "
0 0 14 3 4 #"Case"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 3 #"los"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"empty"
0 0 2 3 1 #" "
0 0 14 3 4 #"list"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 3 #"var"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"clearly"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"los"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 6 #"found?"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 20 3 2 #"#f"
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 7 #"should."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 9 #"Inductive"
0 0 2 3 1 #" "
0 0 14 3 10 #"Hypothesis"
0 0 2 29 1 #"\n"
0 0 14 3 3 #"For"
0 0 2 3 1 #" "
0 0 14 3 3 #"all"
0 0 2 3 1 #" "
0 0 14 3 3 #"los"
0 0 2 3 1 #" "
0 0 14 3 7 #"smaller"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 6 #"length"
0 0 2 3 1 #" "
0 0 14 3 4 #"than"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"current"
0 0 2 3 1 #" "
0 0 14 3 3 #"los"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 6 #"found?"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 9 #"Inductive"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 3 #"los"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 4 #"null"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 6 #"either"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"los"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 14 3 4 #"atom"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 3 #"var"
0 0 2 3 1 #" "
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 4 #"not."
0 0 2 3 1 #" "
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"var"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"los"
0 0 2 29 1 #"\n"
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 6 #"found?"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 20 3 2 #"#t"
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 7 #"should."
0 0 2 3 1 #" "
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"los"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 3 #"los"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 6 #"found?"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"applied"
0 0 2 3 1 #" "
0 0 14 3 11 #"recursively"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 2 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 1 #")"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"which"
0 0 2 3 1 #" "
0 0 14 3 2 #"by"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 2 #"IH"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 6 #"answer"
0 0 2 3 1 #" "
0 0 14 3 7 #"because"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 2 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"smaller"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 6 #"length"
0 0 2 3 1 #" "
0 0 14 3 4 #"than"
0 0 2 3 1 #" "
0 0 14 3 4 #"los."
0 0 2 3 1 #" "
0 0 14 3 4 #"This"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 5 #"since"
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 14 3 3 #"los"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 4 #"null"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 3 #"var"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 5 #"found"
0 0 2 3 1 #" "
0 0 14 3 6 #"should"
0 0 2 3 1 #" "
0 0 14 3 6 #"return"
0 0 2 3 1 #" "
0 0 20 3 2 #"#t"
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 14 3 3 #"var"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 2 3 1 #" "
0 0 14 3 3 #"los"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 20 3 2 #"#f"
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"which"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 4 #"does"
0 0 2 3 1 #" "
0 0 14 3 2 #"by"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 4 #"very"
0 0 2 3 1 #" "
0 0 15 3 11 #"definition."
0 0 2 3 1 #" "
0 0 14 3 9 #"Therefore"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"for"
0 0 2 3 1 #" "
0 0 14 3 3 #"all"
0 0 2 3 1 #" "
0 0 14 3 3 #"los"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 6 #"found?"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 29 1 #"\n"
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 5 #"given"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 4 #"var."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"To"
0 0 2 3 1 #" "
0 0 14 3 5 #"prove"
0 0 2 3 1 #" "
0 0 14 3 11 #"correctness"
0 0 2 3 1 #" "
0 0 14 3 3 #"for"
0 0 2 3 1 #" "
0 0 14 3 8 #"covered?"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 1 #"I"
0 0 2 3 1 #" "
0 0 14 3 6 #"induct"
0 0 2 3 1 #" "
0 0 14 3 2 #"on"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"tree"
0 0 2 3 1 #" "
0 0 14 3 14 #"representation"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"which"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 14 3 13 #"l-expression."
0 0 2 29 1 #"\n"
0 0 14 3 8 #"covered?"
0 0 2 3 1 #" "
0 0 14 3 4 #"also"
0 0 2 3 1 #" "
0 0 14 3 5 #"takes"
0 0 2 3 1 #" "
0 0 14 3 3 #"los"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"same"
0 0 2 3 1 #" "
0 0 14 3 3 #"los"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 3 #"lat"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 3 #"was"
0 0 2 3 1 #" "
0 0 14 3 9 #"described"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 6 #"found?"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 8 #"covered?"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 4 #"Base"
0 0 2 3 1 #" "
0 0 14 3 4 #"Case"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 14 3 4 #"atom"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"covered"
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 4 #"los."
0 0 2 3 1 #" "
0 0 14 3 4 #"That"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 8 #"covered?"
0 0 2 3 1 #" "
0 0 14 3 6 #"should"
0 0 2 3 1 #" "
0 0 14 3 6 #"return"
0 0 2 3 1 #" "
0 0 20 3 2 #"#t"
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 3 #"los"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 20 3 2 #"#f"
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"which"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"exactly"
0 0 2 3 1 #" "
0 0 14 3 4 #"what"
0 0 2 3 1 #" "
0 0 14 3 6 #"found?"
0 0 2 3 1 #" "
0 0 14 3 8 #"returns."
0 0 2 3 1 #" "
0 0 14 3 2 #"So"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 8 #"covered?"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 4 #"this"
0 0 2 3 1 #" "
0 0 14 3 5 #"case."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 9 #"Inductive"
0 0 2 3 1 #" "
0 0 14 3 10 #"Hypothesis"
0 0 2 29 1 #"\n"
0 0 14 3 3 #"For"
0 0 2 3 1 #" "
0 0 14 3 3 #"all"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 7 #"smaller"
0 0 2 3 1 #" "
0 0 14 3 4 #"than"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"current"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 8 #"covered?"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 6 #"value."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 9 #"Inductive"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 14 3 4 #"atom"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"NOT"
0 0 2 3 1 #" "
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 4 #"not."
0 0 2 3 1 #" "
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"NOT"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"covered"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"covered"
0 0 2 3 1 #" "
0 0 14 3 7 #"because"
0 0 2 3 1 #" "
0 0 14 3 3 #"all"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 17 #"symbols/variables"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 3 #"are"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 5 #"cadr."
0 0 2 3 1 #" "
0 0 14 3 3 #"But"
0 0 2 3 1 #" "
0 0 14 3 2 #"by"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 2 #"IH"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 8 #"covered?"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 7 #"applied"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 7 #"because"
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"smaller"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 8 #"narrower"
0 0 2 3 1 #" "
0 0 14 3 4 #"than"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"tree"
0 0 2 3 1 #" "
0 0 14 3 15 #"representation."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"NOT"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 6 #"either"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"AND"
0 0 2 3 1 #" "
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"OR."
0 0 2 3 1 #" "
0 0 14 3 2 #"In"
0 0 2 3 1 #" "
0 0 14 3 6 #"either"
0 0 2 3 1 #" "
0 0 15 3 4 #"case"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"all"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 9 #"variables"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 3 #"are"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 6 #"caddr."
0 0 2 3 1 #" "
0 0 14 3 9 #"Therefore"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"covered"
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 5 #"caddr"
0 0 2 3 1 #" "
0 0 14 3 3 #"are"
0 0 2 3 1 #" "
0 0 14 3 8 #"covered."
0 0 2 3 1 #" "
0 0 14 3 4 #"That"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 7 #"exactly"
0 0 2 3 1 #" "
0 0 14 3 4 #"what"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 9 #"statement"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 11 #"determines."
0 0 2 3 1 #" "
0 0 14 3 2 #"By"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 2 #"IH"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"since"
0 0 2 3 1 #" "
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 5 #"caddr"
0 0 2 3 1 #" "
0 0 14 3 3 #"are"
0 0 2 3 1 #" "
0 0 14 3 7 #"smaller"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 8 #"narrower"
0 0 2 29 1 #"\n"
0 0 14 3 4 #"than"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 7 #"covered"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 3 #"for"
0 0 2 3 1 #" "
0 0 14 3 4 #"both"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 9 #"recursive"
0 0 2 3 1 #" "
0 0 14 3 8 #"calls.If"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"covered?"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 22 3 2 #"))"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 20 3 2 #"#f"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 7 #"covered"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 9 #"therefore"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 7 #"neither"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 5 #"lexp."
0 0 2 3 1 #" "
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"covered?"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 22 3 2 #"))"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 20 3 2 #"#t"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 29 1 #"\n"
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 20 3 2 #"#t"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"..."
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"covered?"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"caddr"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 22 3 2 #"))"
0 0 26 3 1 #"."
0 0 2 3 1 #" "
0 0 14 3 9 #"Therefore"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 29 1 #"\n"
0 0 14 3 7 #"covered"
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"covered"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 5 #"caddr"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 8 #"covered."
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 9 #"Therefore"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"for"
0 0 2 3 1 #" "
0 0 14 3 3 #"all"
0 0 2 3 1 #" "
0 0 14 3 8 #"possible"
0 0 2 3 1 #" "
0 0 14 3 5 #"lexps"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 8 #"covered?"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 6 #"value."
0 00000000000 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 10 #";c  Answer"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 6 #"lookup"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"var"
0 0 4 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 9 #"Undefined"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"caar"
0 0 4 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"cadar"
0 0 4 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 6 #"lookup"
0 0 4 3 1 #" "
0 0 14 3 3 #"var"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 7 00000003385 4 00000000000 1 00000000000 563 0 14 3 13
#"Certification"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"To"
0 0 2 3 1 #" "
0 0 14 3 5 #"prove"
0 0 2 3 1 #" "
0 0 14 3 11 #"correctness"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 6 #"lookup"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"which"
0 0 2 3 1 #" "
0 0 14 3 5 #"takes"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 14 3 4 #"atom"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 8 #"variable"
0 0 22 3 1 #")"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"var"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 8 #"examines"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 14 3 10 #"containing"
0 0 2 29 1 #"\n"
0 0 14 3 5 #"lists"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 8 #"variable"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 5 #"pairs"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"first"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 4 #"pair"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 2 3 1 #" "
0 0 14 3 5 #"where"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 8 #"variable"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"var"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 1 #"I"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 6 #"induct"
0 0 2 3 1 #" "
0 0 14 3 2 #"on"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 6 #"length"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"al."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 4 #"Base"
0 0 2 3 1 #" "
0 0 14 3 4 #"Case"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 4 #"null"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 8 #"contains"
0 0 2 3 1 #" "
0 0 14 3 2 #"no"
0 0 2 3 1 #" "
0 0 14 3 5 #"lists"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 8 #"variable"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 5 #"pairs"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 3 #"var"
0 0 2 3 1 #" "
0 0 14 3 4 #"does"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 4 #"have"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 6 #"value."
0 0 2 3 1 #" "
0 0 14 3 2 #"By"
0 0 2 29 1 #"\n"
0 0 15 3 10 #"definition"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 6 #"lookup"
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 9 #"Undefined"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 8 #"denoting"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 3 #"var"
0 0 2 3 1 #" "
0 0 14 3 4 #"does"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 4 #"have"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 6 #"value."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 9 #"Inductive"
0 0 2 3 1 #" "
0 0 14 3 10 #"Hypothesis"
0 0 2 29 1 #"\n"
0 0 14 3 3 #"For"
0 0 2 3 1 #" "
0 0 14 3 3 #"all"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 2 3 1 #" "
0 0 14 3 7 #"smaller"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 6 #"length"
0 0 2 3 1 #" "
0 0 14 3 4 #"than"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"current"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 6 #"lookup"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 6 #"result"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 29 1 #"\n"
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 5 #"entry"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"first"
0 0 2 3 1 #" "
0 0 14 3 4 #"pair"
0 0 2 3 1 #" "
0 0 14 3 5 #"where"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 8 #"variable"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 4 #"var."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 9 #"Inductive"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 4 #"null"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 8 #"contains"
0 0 2 3 1 #" "
0 0 14 3 2 #"at"
0 0 2 3 1 #" "
0 0 14 3 5 #"least"
0 0 2 3 1 #" "
0 0 14 3 3 #"one"
0 0 2 3 1 #" "
0 0 14 3 4 #"pair"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 8 #"entries."
0 0 2 3 1 #" "
0 0 14 3 3 #"Now"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 6 #"either"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 2 #"))"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 29 1 #"\n"
0 0 14 3 3 #"var"
0 0 2 3 1 #" "
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 4 #"not."
0 0 2 3 1 #" "
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 13 #"corresponding"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 8 #"variable"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"pair"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 9 #"correctly"
0 0 2 3 1 #" "
0 0 14 3 8 #"returned"
0 0 26 3 1 #","
0 0 2 29 1 #"\n"
0 0 14 3 5 #"which"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 3 #")))"
0 0 26 3 1 #"."
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"caar"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 3 #"var"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 6 #"lookup"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"applied"
0 0 2 3 1 #" "
0 0 14 3 11 #"recursively"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 1 #")"
0 0 26 3 1 #"."
0 0 2 3 1 #" "
0 0 14 3 5 #"Since"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"smaller"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 6 #"length"
0 0 2 3 1 #" "
0 0 14 3 4 #"than"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"by"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 2 #"IH"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"this"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 5 #"entry"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"first"
0 0 2 3 1 #" "
0 0 14 3 4 #"pair"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 3 #"cdr"
0 0 2 3 1 #" "
0 0 14 3 5 #"where"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 8 #"variable"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"var"
0 0 2 3 1 #" "
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 9 #"Undefined"
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 14 3 5 #"there"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"no"
0 0 2 3 1 #" "
0 0 14 3 4 #"such"
0 0 2 3 1 #" "
0 0 14 3 5 #"pair."
0 0 2 3 1 #" "
0 0 14 3 4 #"This"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"exactly"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 6 #"result"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"lookup"
0 0 2 3 1 #" "
0 0 14 3 3 #"var"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"caar"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 4 #"var."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 4 #"Thus"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"for"
0 0 2 3 1 #" "
0 0 14 3 3 #"all"
0 0 2 3 1 #" "
0 0 14 3 8 #"possible"
0 0 2 3 1 #" "
0 0 14 3 5 #"input"
0 0 2 3 1 #" "
0 0 14 3 5 #"sizes"
0 0 2 3 1 #" "
0 0 14 3 3 #"for"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 6 #"lookup"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 7 #"answer."
0 00000000000 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 10 #";d  Answer"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 5 #"value"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"lexp"
0 0 4 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 2 #"(("
0 0 14 3 8 #"covered?"
0 0 4 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"makelos"
0 0 4 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"valuate"
0 0 4 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 4 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 11 #"not-covered"
0 0 22 3 1 #")"
0 0 4 3 3 #"   "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 7 #"makelos"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"al"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 3 #"())"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"caar"
0 0 4 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"makelos"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 7 #"valuate"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"lexp"
0 0 4 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 5 #"atom?"
0 0 4 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"conv"
0 0 22 3 1 #"("
0 0 14 3 6 #"lookup"
0 0 4 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 4 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"AND"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"valuate"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"valuate"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"caddr"
0 0 4 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"OR"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"or"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"valuate"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"valuate"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"caddr"
0 0 4 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"valuate"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 4 #"conv"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"val"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 3 #"val"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 9 #"Undefined"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 7 00000013567 4 00000000000 1 00000000000 2260 0 14 3 13
#"Certification"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"To"
0 0 2 3 1 #" "
0 0 14 3 5 #"prove"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 11 #"correctness"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 1 #"I"
0 0 2 3 1 #" "
0 0 14 3 5 #"first"
0 0 2 3 1 #" "
0 0 14 3 5 #"prove"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 11 #"correctness"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 6 #"helper"
0 0 2 3 1 #" "
0 0 14 3 10 #"functions."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 7 #"makelos"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"To"
0 0 2 3 1 #" "
0 0 14 3 5 #"prove"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 11 #"correctness"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 7 #"makelos"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"which"
0 0 2 3 1 #" "
0 0 14 3 5 #"takes"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 14 3 11 #"association"
0 0 2 3 1 #" "
0 0 14 3 4 #"list"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 10 #"containing"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 9 #"variables"
0 0 22 3 1 #"("
0 0 14 3 5 #"atoms"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 4 #"only"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 11 #"association"
0 0 2 3 1 #" "
0 0 14 3 4 #"list"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 7 #"without"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 13 #"corresponding"
0 0 2 29 1 #"\n"
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 5 #"pairs"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 1 #"I"
0 0 2 3 1 #" "
0 0 14 3 6 #"induct"
0 0 2 3 1 #" "
0 0 14 3 2 #"on"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 6 #"length"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"al."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 4 #"Base"
0 0 2 3 1 #" "
0 0 14 3 4 #"Case"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 4 #"null"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 7 #"makelos"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"empty"
0 0 2 3 1 #" "
0 0 14 3 5 #"list."
0 0 2 3 1 #" "
0 0 14 3 4 #"This"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 7 #"because"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 2 3 1 #" "
0 0 14 3 8 #"contains"
0 0 2 3 1 #" "
0 0 14 3 2 #"no"
0 0 2 3 1 #" "
0 0 14 3 10 #"variables."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 9 #"Inductive"
0 0 2 3 1 #" "
0 0 14 3 10 #"Hypothesis"
0 0 2 29 1 #"\n"
0 0 14 3 3 #"For"
0 0 2 3 1 #" "
0 0 14 3 3 #"all"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 2 3 1 #" "
0 0 14 3 4 #"with"
0 0 2 3 1 #" "
0 0 14 3 6 #"length"
0 0 2 3 1 #" "
0 0 14 3 7 #"smaller"
0 0 2 3 1 #" "
0 0 14 3 4 #"than"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"current"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 7 #"makelos"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 7 #"result."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 9 #"Inductive"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 4 #"null"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 3 #"has"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 4 #"cdr."
0 0 2 3 1 #" "
0 0 14 3 4 #"More"
0 0 2 3 1 #" "
0 0 14 3 12 #"specifically"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 14 3 5 #"whose"
0 0 2 3 1 #" "
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 8 #"variable"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 5 #"whose"
0 0 2 3 1 #" "
0 0 14 3 3 #"cdr"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 13 #"corresponding"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 9 #"variable."
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"caar"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 8 #"variable"
0 0 2 3 1 #" "
0 0 14 3 4 #"part"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 4 #"this"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 6 #"consed"
0 0 2 3 1 #" "
0 0 14 3 4 #"onto"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 9 #"recursive"
0 0 2 3 1 #" "
0 0 14 3 4 #"call"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 7 #"makelos"
0 0 2 29 1 #"\n"
0 0 14 3 7 #"applied"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 1 #")"
0 0 26 3 1 #"."
0 0 2 3 1 #" "
0 0 14 3 7 #"However"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"by"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 2 #"IH"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"since"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"smaller"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 6 #"length"
0 0 2 3 1 #" "
0 0 14 3 4 #"than"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"this"
0 0 2 29 1 #"\n"
0 0 14 3 9 #"recursive"
0 0 2 3 1 #" "
0 0 14 3 4 #"call"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 6 #"value."
0 0 2 3 1 #" "
0 0 14 3 4 #"That"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"all"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 8 #"variable"
0 0 2 3 1 #" "
0 0 14 3 5 #"parts"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"al"
0 0 2 3 1 #" "
0 0 14 3 4 #"from"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"variable"
0 0 26 3 1 #","
0 0 2 3 2 #"  "
0 0 14 3 5 #"value"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 5 #"pairs"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 5 #"order"
0 0 2 3 1 #" "
0 0 14 3 4 #"they"
0 0 2 3 1 #" "
0 0 14 3 4 #"were"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"al."
0 0 2 3 1 #" "
0 0 14 3 7 #"Consing"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"caar"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 4 #"onto"
0 0 2 3 1 #" "
0 0 14 3 4 #"this"
0 0 2 3 1 #" "
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 6 #"result"
0 0 2 3 1 #" "
0 0 14 3 3 #"for"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"makelos"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 14 3 8 #"contains"
0 0 2 3 1 #" "
0 0 14 3 3 #"all"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 8 #"variable"
0 0 2 3 1 #" "
0 0 14 3 5 #"parts"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 3 #"cdr"
0 0 2 3 1 #" "
0 0 14 3 4 #"with"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 8 #"variable"
0 0 2 3 1 #" "
0 0 14 3 4 #"part"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 6 #"front."
0 0 2 3 1 #" "
0 0 14 3 4 #"Thus"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 7 #"makelos"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 6 #"result"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 3 #"for"
0 0 2 3 1 #" "
0 0 14 3 3 #"all"
0 0 2 3 1 #" "
0 0 14 3 8 #"possible"
0 0 2 3 1 #" "
0 0 14 3 7 #"alists."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 4 #"conv"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 4 #"conv"
0 0 2 3 1 #" "
0 0 14 3 4 #"does"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 7 #"recurse"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 9 #"therefore"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 11 #"correctness"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 6 #"simply"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 6 #"matter"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 9 #"verifying"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"code."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 3 #"The"
0 0 2 3 1 #" "
0 0 14 3 5 #"input"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 4 #"conv"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 6 #"result"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 7 #"calling"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"lookup"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 22 3 1 #")"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"where"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 14 3 4 #"atom"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"al"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 14 3 11 #"association"
0 0 2 3 1 #" "
0 0 14 3 5 #"list."
0 0 2 3 1 #" "
0 0 14 3 5 #"Since"
0 0 2 3 1 #" "
0 0 14 3 6 #"lookup"
0 0 2 3 1 #" "
0 0 14 3 3 #"can"
0 0 2 3 1 #" "
0 0 14 3 11 #"technically"
0 0 2 3 1 #" "
0 0 14 3 6 #"return"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 9 #"Undefined"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"conv"
0 0 2 3 1 #" "
0 0 14 3 8 #"provides"
0 0 2 29 1 #"\n"
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 6 #"result"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 15 3 4 #"case"
0 0 2 3 1 #" "
0 0 14 3 5 #"also."
0 0 2 3 1 #" "
0 0 14 3 7 #"However"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"conv"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 4 #"only"
0 0 2 3 1 #" "
0 0 14 3 6 #"called"
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 6 #"entire"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 5 #"input"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 8 #"function"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"covered"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"closed"
0 0 22 3 1 #")"
0 0 26 3 1 #"."
0 0 2 3 1 #" "
0 0 14 3 9 #"Therefore"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"there"
0 0 2 3 1 #" "
0 0 14 3 4 #"will"
0 0 2 3 1 #" "
0 0 14 3 5 #"never"
0 0 2 3 1 #" "
0 0 14 3 2 #"be"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 8 #"variable"
0 0 2 3 1 #" "
0 0 14 3 4 #"pair"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 5 #"input"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 29 1 #"\n"
0 0 14 3 7 #"valuate"
0 0 2 3 1 #" "
0 0 14 3 8 #"withouta"
0 0 2 3 1 #" "
0 0 14 3 6 #"value."
0 0 2 3 1 #" "
0 0 14 3 4 #"That"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"no"
0 0 2 3 1 #" "
0 0 14 3 8 #"variable"
0 0 2 3 1 #" "
0 0 14 3 4 #"pair"
0 0 2 3 1 #" "
0 0 14 3 4 #"will"
0 0 2 3 1 #" "
0 0 14 3 4 #"have"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 9 #"Undefined"
0 0 2 3 1 #" "
0 0 14 3 8 #"returned"
0 0 2 3 1 #" "
0 0 14 3 2 #"by"
0 0 2 3 1 #" "
0 0 14 3 7 #"lookup."
0 0 2 3 1 #" "
0 0 14 3 7 #"However"
0 0 26 3 1 #","
0 0 2 29 1 #"\n"
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 14 3 6 #"lookup"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 20 3 1 #"0"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"val"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 20 3 1 #"0"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 4 #"conv"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 20 3 2 #"#f"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 20 3 1 #"0"
0 0 2 3 1 #" "
0 0 14 3 10 #"represents"
0 0 2 3 1 #" "
0 0 20 3 2 #"#f"
0 0 26 3 1 #"."
0 0 2 3 1 #" "
0 0 14 3 9 #"Similarly"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 20 3 2 #"#t"
0 0 2 3 1 #" "
0 0 14 3 3 #"for"
0 0 2 29 1 #"\n"
0 0 20 3 2 #"1."
0 0 2 3 1 #" "
0 0 14 3 4 #"conv"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 4 #"just"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 8 #"function"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 8 #"converts"
0 0 2 3 1 #" "
0 0 20 3 1 #"0"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 20 3 2 #"#f"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 20 3 2 #"#t"
0 0 26 3 1 #"."
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 7 #"valuate"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"To"
0 0 2 3 1 #" "
0 0 14 3 5 #"prove"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 11 #"correctness"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 7 #"valuate"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"which"
0 0 2 3 1 #" "
0 0 14 3 5 #"takes"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 6 #"closed"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 13 #"corresponding"
0 0 2 3 1 #" "
0 0 14 3 5 #"alist"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 26 3 1 #","
0 0 2 29 1 #"\n"
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"truth"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 1 #"I"
0 0 2 3 1 #" "
0 0 14 3 6 #"induct"
0 0 2 3 1 #" "
0 0 14 3 2 #"on"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"tree"
0 0 2 3 1 #" "
0 0 14 3 14 #"representation"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 5 #"lexp."
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 3 #"has"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 5 #"truth"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 7 #"because"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 6 #"closed"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"for"
0 0 2 3 1 #" "
0 0 14 3 3 #"all"
0 0 2 3 1 #" "
0 0 14 3 7 #"symbols"
0 0 22 3 1 #"("
0 0 14 3 5 #"atoms"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"there"
0 0 2 3 1 #" "
0 0 14 3 6 #"exists"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 13 #"corresponding"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 29 1 #"\n"
0 0 14 3 5 #"entry"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 4 #"some"
0 0 2 3 1 #" "
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 14 3 6 #"inside"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"whose"
0 0 2 3 1 #" "
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"symbol."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 4 #"Base"
0 0 2 3 1 #" "
0 0 14 3 4 #"Case"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 14 3 4 #"atom"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 6 #"symbol"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 4 #"some"
0 0 2 3 1 #" "
0 0 14 3 8 #"variable"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"variable"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 5 #"entry"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"al."
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 6 #"lookup"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 13 #"corresponding"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 5 #"entry"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"first"
0 0 2 3 1 #" "
0 0 14 3 4 #"such"
0 0 2 3 1 #" "
0 0 14 3 8 #"variable"
0 0 2 3 1 #" "
0 0 14 3 11 #"occurrence."
0 0 2 3 1 #" "
0 0 14 3 4 #"This"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 5 #"entry"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 6 #"either"
0 0 2 3 1 #" "
0 0 20 3 1 #"0"
0 0 2 3 1 #" "
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 4 #"conv"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 4 #"used"
0 0 2 3 1 #" "
0 0 14 3 2 #"on"
0 0 2 3 1 #" "
0 0 14 3 4 #"this"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 5 #"entry"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 8 #"converts"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 20 3 1 #"0"
0 0 2 3 1 #" "
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 20 3 2 #"#f"
0 0 2 3 1 #" "
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 20 3 2 #"#t"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"which"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 6 #"result"
0 0 2 3 1 #" "
0 0 14 3 3 #"for"
0 0 2 3 1 #" "
0 0 14 3 5 #"lexp."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 9 #"Inductive"
0 0 2 3 1 #" "
0 0 14 3 10 #"hypothesis"
0 0 26 3 1 #","
0 0 2 29 1 #"\n"
0 0 14 3 3 #"For"
0 0 2 3 1 #" "
0 0 14 3 3 #"all"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 19 3 10 #"\"narrower\""
0 0 2 3 1 #" "
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 19 3 9 #"\"shorter\""
0 0 2 3 1 #" "
0 0 14 3 4 #"than"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"current"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"tree"
0 0 2 3 1 #" "
0 0 14 3 14 #"representation"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 7 #"valuate"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 29 1 #"\n"
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 7 #"result."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 9 #"Inductive"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 14 3 4 #"atom"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"AND"
0 0 2 3 1 #" "
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 4 #"not."
0 0 2 3 1 #" "
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"logical"
0 0 2 29 1 #"\n"
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"truth"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 3 #"two"
0 0 2 3 1 #" "
0 0 14 3 9 #"arguments"
0 0 2 3 1 #" "
0 0 14 3 5 #"needs"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 2 #"be"
0 0 2 3 1 #" "
0 0 14 3 10 #"performed."
0 0 2 3 1 #" "
0 0 14 3 4 #"This"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"exactly"
0 0 2 3 1 #" "
0 0 14 3 4 #"what"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 5 #"done."
0 0 2 3 1 #" "
0 0 14 3 3 #"The"
0 0 2 3 1 #" "
0 0 14 3 3 #"two"
0 0 2 29 1 #"\n"
0 0 14 3 9 #"arguments"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"AND"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 3 #"are"
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 6 #"caddr."
0 0 2 3 1 #" "
0 0 14 3 5 #"Since"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 6 #"closed"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 5 #"caddr"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 3 #"are"
0 0 2 3 1 #" "
0 0 14 3 4 #"also"
0 0 2 3 1 #" "
0 0 14 3 7 #"closed."
0 0 2 3 1 #" "
0 0 14 3 7 #"valuate"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 11 #"recursively"
0 0 2 3 1 #" "
0 0 14 3 7 #"applied"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"caddr"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"with"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"same"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 2 #"by"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 2 #"IH"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 5 #"since"
0 0 2 3 1 #" "
0 0 14 3 4 #"both"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"caddr"
0 0 2 3 1 #" "
0 0 14 3 3 #"are"
0 0 2 3 1 #" "
0 0 19 3 10 #"\"narrower\""
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 19 3 9 #"\"shorter\""
0 0 2 3 1 #" "
0 0 14 3 4 #"than"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 7 #"valuate"
0 0 2 3 1 #" "
0 0 14 3 3 #"for"
0 0 2 3 1 #" "
0 0 14 3 4 #"both"
0 0 2 3 1 #" "
0 0 14 3 5 #"these"
0 0 2 3 1 #" "
0 0 14 3 5 #"calls"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 29 1 #"\n"
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 5 #"truth"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 20 3 2 #"#t"
0 0 2 3 1 #" "
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 20 3 2 #"#f"
0 0 26 3 1 #"."
0 0 2 3 1 #" "
0 0 14 3 5 #"Since"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"AND"
0 0 2 3 1 #" "
0 0 14 3 10 #"expression"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"logical"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 6 #"values"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 8 #"argument"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 5 #"lexp."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"AND"
0 0 2 3 1 #" "
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"eq"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"OR"
0 0 2 3 1 #" "
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 4 #"not."
0 0 2 3 1 #" "
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"logical"
0 0 2 3 1 #" "
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 29 1 #"\n"
0 0 14 3 5 #"truth"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 3 #"two"
0 0 2 3 1 #" "
0 0 14 3 9 #"arguments"
0 0 2 3 1 #" "
0 0 14 3 5 #"needs"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 2 #"be"
0 0 2 3 1 #" "
0 0 14 3 10 #"performed."
0 0 2 3 1 #" "
0 0 14 3 4 #"This"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"exactly"
0 0 2 3 1 #" "
0 0 14 3 4 #"what"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 5 #"done."
0 0 2 3 1 #" "
0 0 14 3 3 #"The"
0 0 2 3 1 #" "
0 0 14 3 3 #"two"
0 0 2 3 1 #" "
0 0 14 3 9 #"arguments"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"OR"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 3 #"are"
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 6 #"caddr."
0 0 2 3 1 #" "
0 0 14 3 5 #"Since"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 6 #"closed"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 5 #"caddr"
0 0 2 3 1 #" "
0 0 14 3 3 #"are"
0 0 2 3 1 #" "
0 0 14 3 4 #"also"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 7 #"closed."
0 0 2 3 1 #" "
0 0 14 3 7 #"valuate"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 11 #"recursively"
0 0 2 3 1 #" "
0 0 14 3 7 #"applied"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"caddr"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"with"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"same"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 2 #"by"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 2 #"IH"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"since"
0 0 2 29 1 #"\n"
0 0 14 3 4 #"both"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"caddr"
0 0 2 3 1 #" "
0 0 14 3 3 #"are"
0 0 2 3 1 #" "
0 0 19 3 10 #"\"narrower\""
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 19 3 9 #"\"shorter\""
0 0 2 3 1 #" "
0 0 14 3 4 #"than"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 7 #"valuate"
0 0 2 3 1 #" "
0 0 14 3 3 #"for"
0 0 2 3 1 #" "
0 0 14 3 4 #"both"
0 0 2 3 1 #" "
0 0 14 3 5 #"these"
0 0 2 3 1 #" "
0 0 14 3 5 #"calls"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 29 1 #"\n"
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 5 #"truth"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 20 3 2 #"#t"
0 0 2 3 1 #" "
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 20 3 2 #"#f"
0 0 26 3 1 #"."
0 0 2 3 1 #" "
0 0 14 3 5 #"Since"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"OR"
0 0 2 3 1 #" "
0 0 14 3 10 #"expression"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"logical"
0 0 2 3 1 #" "
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 29 1 #"\n"
0 0 14 3 6 #"values"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 8 #"argument"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 5 #"lexp."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"OR"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"NOT"
0 0 2 3 1 #" "
0 0 14 3 11 #"expression."
0 0 2 3 1 #" "
0 0 14 3 2 #"In"
0 0 2 3 1 #" "
0 0 14 3 4 #"this"
0 0 2 3 1 #" "
0 0 15 3 4 #"case"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"logical"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"truth"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 8 #"argument"
0 0 2 3 1 #" "
0 0 14 3 5 #"needs"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 2 #"be"
0 0 2 3 1 #" "
0 0 14 3 10 #"performed."
0 0 2 3 1 #" "
0 0 14 3 3 #"The"
0 0 2 3 1 #" "
0 0 14 3 8 #"argument"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"NOT"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 7 #"valuate"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"applied"
0 0 2 29 1 #"\n"
0 0 14 3 11 #"recursively"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 4 #"with"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"same"
0 0 2 3 1 #" "
0 0 14 3 3 #"al."
0 0 2 3 1 #" "
0 0 14 3 2 #"By"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 2 #"IH"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"since"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 19 3 10 #"\"narrower\""
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 19 3 9 #"\"shorter\""
0 0 2 3 1 #" "
0 0 14 3 4 #"than"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 26 3 1 #","
0 0 2 29 1 #"\n"
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 5 #"truth"
0 0 2 3 1 #" "
0 0 14 3 6 #"value."
0 0 2 3 1 #" "
0 0 14 3 5 #"Since"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"NOT"
0 0 2 3 1 #" "
0 0 14 3 10 #"expression"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"logical"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 6 #"result"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 29 1 #"\n"
0 0 14 3 9 #"recursive"
0 0 2 3 1 #" "
0 0 14 3 4 #"call"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 5 #"lexp."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 9 #"Therefore"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"for"
0 0 2 3 1 #" "
0 0 14 3 3 #"all"
0 0 2 3 1 #" "
0 0 14 3 8 #"possible"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"forms"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 9 #"computed."
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 5 #"value"
0 0 2 29 1 #"\n"
0 0 2 29 1 #"\n"
0 0 14 3 7 #"Finally"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"with"
0 0 2 3 1 #" "
0 0 14 3 3 #"all"
0 0 2 3 1 #" "
0 0 14 3 5 #"these"
0 0 2 3 1 #" "
0 0 14 3 6 #"helper"
0 0 2 3 1 #" "
0 0 14 3 9 #"functions"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"with"
0 0 2 3 1 #" "
0 0 14 3 7 #"valuate"
0 0 2 3 1 #" "
0 0 14 3 10 #"performing"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"major"
0 0 2 3 1 #" "
0 0 14 3 4 #"task"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"we"
0 0 2 3 1 #" "
0 0 14 3 3 #"can"
0 0 2 3 1 #" "
0 0 14 3 5 #"prove"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 29 1 #"\n"
0 0 14 3 5 #"works"
0 0 2 3 1 #" "
0 0 14 3 10 #"correctly."
0 0 2 3 1 #" "
0 0 14 3 5 #"Since"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 3 #"has"
0 0 2 3 1 #" "
0 0 14 3 2 #"no"
0 0 2 3 1 #" "
0 0 14 3 9 #"recursion"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 11 #"correctness"
0 0 2 3 1 #" "
0 0 14 3 6 #"simply"
0 0 2 3 1 #" "
0 0 14 3 7 #"follows"
0 0 2 3 1 #" "
0 0 14 3 4 #"from"
0 0 2 3 1 #" "
0 0 14 3 9 #"analyzing"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"code."
0 0 2 3 1 #" "
0 0 14 3 2 #"As"
0 0 2 3 1 #" "
0 0 14 3 5 #"given"
0 0 2 29 1 #"\n"
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 14 #"specifications"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"input"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 6 #"closed"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 5 #"needs"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 2 #"be"
0 0 2 3 1 #" "
0 0 14 3 8 #"computed"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 9 #"otherwise"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 29 1 #"\n"
0 0 14 3 6 #"string"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 11 #"not-covered"
0 0 2 3 1 #" "
0 0 14 3 5 #"needs"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 2 #"be"
0 0 2 3 1 #" "
0 0 14 3 9 #"returned."
0 0 2 3 1 #" "
0 0 14 3 4 #"This"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"exactly"
0 0 2 3 1 #" "
0 0 14 3 4 #"what"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 5 #"done."
0 0 2 3 1 #" "
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 8 #"covered?"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 7 #"valuate"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 29 1 #"\n"
0 0 14 3 7 #"applied"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 4 #"with"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 13 #"corresponding"
0 0 2 3 1 #" "
0 0 14 3 2 #"al"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"which"
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 14 3 6 #"proved"
0 0 2 3 1 #" "
0 0 14 3 7 #"earlier"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"right"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 7 #"because"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 7 #"closed."
0 0 2 3 1 #" "
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 7 #"covered"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 6 #"string"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 11 #"not-covered"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 8 #"returned"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 14 3 10 #"specified."
0 0 2 3 1 #" "
0 0 14 3 9 #"Therefore"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 5 #"works"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 14 3 9 #"correctly"
0 0 2 3 1 #" "
0 0 14 3 3 #"for"
0 0 2 3 1 #" "
0 0 14 3 3 #"all"
0 0 2 3 1 #" "
0 0 14 3 8 #"possible"
0 0 2 3 1 #" "
0 0 14 3 6 #"inputs"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 4 #"lexp"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 3 #"al."
0 0 2 29 1 #"\n"
0 00000000000 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 3 #"q.a"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"newline"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 4 #"TEST"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 3 #"AND"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"OR"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"NOT"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"AND"
0 0 4 3 1 #" "
0 0 14 3 1 #"c"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"NOT"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"newline"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 4 29 1 #"\n"
0 0 17 3 2 #"; "
0 0 17 3 1 #"("
0 0 17 3 5 #"lexp?"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 3 #"())"
0 0 17 3 1 #" "
0 1 17 65 1 #"\t"
0 1 17 65 1 #"\t"
0 0 17 3 6 #";false"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"lexp?"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 1 #"a"
0 0 22 3 2 #"))"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 17 3 6 #";false"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"lexp?"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 3 #"NOT"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 2 #"))"
0 1 4 65 1 #"\t"
0 0 17 3 6 #";false"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"lexp?"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 2 #"OR"
0 0 4 3 1 #" "
0 0 14 3 1 #"A"
0 0 4 3 1 #" "
0 0 14 3 1 #"B"
0 0 4 3 1 #" "
0 0 14 3 1 #"C"
0 0 22 3 2 #"))"
0 1 4 65 1 #"\t"
0 0 17 3 6 #";false"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"lexp?"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 3 #"AND"
0 0 4 3 1 #" "
0 0 14 3 1 #"A"
0 0 22 3 2 #"))"
0 1 4 65 1 #"\t"
0 0 17 3 6 #";false"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"lexp?"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 3 #"NOT"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 2 #"))"
0 1 4 65 1 #"\t"
0 0 17 3 5 #";true"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"lexp?"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 3 #"AND"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 2 #"))"
0 1 4 65 1 #"\t"
0 0 17 3 5 #";true"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"lexp?"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 2 #"OR"
0 0 4 3 1 #" "
0 0 14 3 1 #"A"
0 0 4 3 1 #" "
0 0 14 3 1 #"B"
0 0 22 3 2 #"))"
0 1 4 65 1 #"\t"
0 0 17 3 5 #";true"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"lexp?"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 17 3 5 #";true"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"lexp?"
0 0 4 3 1 #" "
0 0 14 3 4 #"TEST"
0 0 22 3 1 #")"
0 1 4 65 1 #"\t"
0 1 4 65 1 #"\t"
0 0 17 3 5 #";true"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 3 #"q.b"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"newline"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 8 #"covered?"
0 0 4 3 1 #" "
0 0 14 3 4 #"TEST"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 4 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 2 #"))"
0 0 4 3 4 #"    "
0 0 17 3 4 #";;#t"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 8 #"covered?"
0 0 4 3 1 #" "
0 0 14 3 4 #"TEST"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 2 #"))"
0 0 4 3 6 #"      "
0 0 17 3 4 #";;#f"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 3 #"q.c"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"newline"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 6 #"lookup"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 2 #"(("
0 0 14 3 1 #"b"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"c"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"d"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 17 3 3 #";;1"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 6 #"lookup"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 2 #"(("
0 0 14 3 1 #"b"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"c"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"d"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 3 #")))"
0 0 4 3 3 #"   "
0 0 17 3 11 #";;not found"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 1 #"("
0 0 14 3 3 #"q.d"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"newline"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 14 3 4 #"TEST"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"value"
0 0 4 3 1 #" "
0 0 14 3 4 #"TEST"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 3 #"())"
0 0 4 3 18 #"                  "
0 0 17 3 13 #";;not covered"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"value"
0 0 4 3 1 #" "
0 0 14 3 4 #"TEST"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 2 #"(("
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"b"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"c"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 17 3 4 #";;#t"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"value"
0 0 4 3 1 #" "
0 0 14 3 4 #"TEST"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 2 #"(("
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"b"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"c"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 3 #")))"
0 0 4 3 1 #" "
0 0 17 3 4 #";;#f"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"value"
0 0 4 3 1 #" "
0 0 14 3 4 #"TEST"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 2 #"(("
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"b"
0 0 4 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 2 #"))"
0 0 4 3 6 #"      "
0 0 17 3 13 #";;not covered"
0 0 4 29 1 #"\n"
0 00000000000
