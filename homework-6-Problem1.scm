#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file is in PLT Scheme editor format.
   Open this file in DrScheme version 370 or later to read it.

   Most likely, it was created by saving a program in DrScheme,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://www.plt-scheme.org
|#
 28 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wxmedia\0"
4 1 8 #"wximage\0"
2 0 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 56
(
 #"(lib \"hrule-snip.ss\" \"macro-debugger\" \"syntax-browse"
 #"r\")\0"
) 1 0 18 #"java-comment-box%\0"
1 0 23 #"java-interactions-box%\0"
1 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55
(
 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private"
 #"\")\0"
) 1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 15 #"test-case-box%\0"
2 0 1 6 #"wxloc\0"
00000000000 1 90 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 15
#"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 27
#"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 128 0 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 128 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 14
#"Html Standard\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drscheme:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drscheme:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 35
#"profj:syntax-colors:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 0 139 0 0 0 -1 -1 2 37
#"profj:syntax-colors:scheme:prim-type\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 0 139 0 0 0 -1 -1 2 38
#"profj:syntax-colors:scheme:identifier\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 34
#"profj:syntax-colors:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 35
#"profj:syntax-colors:scheme:literal\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
35 #"profj:syntax-colors:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
33 #"profj:syntax-colors:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 35
#"profj:syntax-colors:scheme:default\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 37
#"profj:syntax-colors:scheme:uncovered\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 35
#"profj:syntax-colors:scheme:covered\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 0 139 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 4 4
#"XML\0"
0 70 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 8 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 8 24
#"drscheme:text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 0 1
#"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 1
#"\0"
0 75 14 #"Consolas Bold\0"
0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 90 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 90 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 90 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 100 0 0 0 0 -1 -1 27 1
#"\0"
0 70 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 27 1
#"\0"
0 70 1 #"\0"
2 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 27 1
#"\0"
0 70 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 27 1
#"\0"
0 70 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1 27 1
#"\0"
0 70 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1 27 1
#"\0"
0 70 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 27 1
#"\0"
0 70 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 27 1
#"\0"
0 70 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 27 1
#"\0"
0 -1 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 27 1
#"\0"
0 70 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 27
1 #"\0"
0 75 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1 27 1
#"\0"
0 75 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1 27 1
#"\0"
0 70 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 27 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 27 1
#"\0"
0 70 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 1 0 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1 27 1
#"\0"
0 -1 1 #"\0"
2 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 27 1
#"\0"
0 70 1 #"\0"
2 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1 27 1
#"\0"
0 75 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 27 1
#"\0"
0 70 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1 27 1
#"\0"
0 -1 1 #"\0"
1.5 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1 27 1
#"\0"
0 70 1 #"\0"
1.2 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 27 1
#"\0"
0 -1 1 #"\0"
1.2 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 27 1
#"\0"
0 70 1 #"\0"
1.2 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1 27 1
#"\0"
0 -1 1 #"\0"
1.2 0 92 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1 1 1 0 0 255 0 0 0 -1 -1 27 1
#"\0"
0 70 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 27 1
#"\0"
0 75 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 27 1
#"\0"
0 75 1 #"\0"
0.8 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 1 -1 27 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 27 1
#"\0"
0 75 1 #"\0"
0.8 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 1 -1 27 1
#"\0"
0 75 1 #"\0"
1 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 27 1
#"\0"
0 70 1 #"\0"
0.8 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 1 -1 27 1
#"\0"
0 70 1 #"\0"
0.8 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 1 -1
00000000002 0 00000000000 7 00000000000 2223 0 17 3 14 #"; Akshai Sarma"
0 0 4 29 1 #"\n"
0 0 17 3 32 #"; akshai.sarma@macaulay.cuny.edu"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 11 #"; CSc 33500"
0 0 4 29 1 #"\n"
0 0 17 3 12 #"; Homework 6"
0 0 4 29 1 #"\n"
0 0 17 3 41 #"; Due by midnight, Wednesday, November 10"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 98
(
 #"; Problem 1.  Dynamic binding (or dynamic scoping) is an alternativ"
 #"e design in which the procedure"
) 0 0 4 29 1 #"\n"
0 0 17 3 102
(
 #"; body is evaluated in an environment obtained by extending the env"
 #"ironment at the point of call.  For"
) 0 0 4 29 1 #"\n"
0 0 17 3 13 #"; example, in"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 13 #";((lambda (a)"
0 0 4 29 1 #"\n"
0 0 17 3 18 #";   ((lambda (p a)"
0 0 4 29 1 #"\n"
0 0 17 3 22 #";      (cons a (p 2)))"
0 0 4 29 1 #"\n"
0 0 17 3 28 #";    (lambda (x) (cons x a))"
0 0 4 29 1 #"\n"
0 0 17 3 8 #";    5))"
0 0 4 29 1 #"\n"
0 0 17 3 4 #"; 3)"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 54 #"; the a in the body of p would be bound to 5, not 3.  "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 101
(
 #"; In this problem you are to modify tls-scheme so that it uses dyna"
 #"mic rather than lexical binding.  "
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 105
(
 #"; The idea is to store all environment bindings on a global table, "
 #"and to have all environment operations"
) 0 0 4 29 1 #"\n"
0 0 17 3 86
(
 #"; apply to this table.  Regarding the table as a stack, bindings ar"
 #"e pushed onto this "
) 0 0 4 29 1 #"\n"
0 0 17 3 90
(
 #"; stack when a procedure is called and popped from the stack when t"
 #"he procedure returns.  "
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 73
(
 #"; Thus one would not implement closures - instead, *lambda would be"
 #" given"
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 16 #";(define *lambda"
0 0 4 29 1 #"\n"
0 0 17 3 14 #";  (lambda (e)"
0 0 4 29 1 #"\n"
0 0 17 3 33 #";    (build (quote non-primitive)"
0 0 4 29 1 #"\n"
0 0 17 3 22 #";           (cdr e))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 86
(
 #"; Similarly, there would never be a need to pass a table parameter,"
 #" as the environment"
) 0 0 4 29 1 #"\n"
0 0 17 3 14 #"; is global.  "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 95
(
 #"; Test the modified interpreter, and argue that you have correctly "
 #"implemented dynamic binding."
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 96
(
 #"; Problem 2.  Modify make-account (given in lecture11.scm) so that "
 #"it expects a single argument,"
) 0 0 4 29 1 #"\n"
0 0 17 3 50 #"; opening-balance, and modify the body accordingly"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 67
#"; Problem 3. Develop a function, counted, which expects as argument"
0 0 4 29 1 #"\n"
0 0 17 3 74
(
 #"; a function f of one argument, and which returns a function which "
 #"is like"
) 0 0 4 29 1 #"\n"
0 0 17 3 69
#"; f except for keeping track of the number of times f has been called"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 83
(
 #"; thus:  if (define counted-sq (counted sq)) when (define sq (lambd"
 #"a (x) (* x x))),"
) 0 0 4 29 1 #"\n"
0 0 17 3 76
(
 #"; ((counted-sq 'func) 2) = 4 but, after 10 calls, (counted-sq 'coun"
 #"t) = 10. "
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 81
(
 #"; Problem 4.  Use the environment model to explain your solutions t"
 #"o the previous"
) 0 0 4 29 1 #"\n"
0 0 17 3 16 #"; two exercises."
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 78
(
 #"; ****************************Answers******************************"
 #"***********"
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 78
(
 #"; ****************************Problem 1****************************"
 #"***********"
) 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 7 00000021157 4 00000000000 1 00000000000 3525 0 2 3 2 #"  "
0 0 14 3 11 #"Correctness"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 3 #"The"
0 0 2 3 1 #" "
0 0 14 3 4 #"test"
0 0 2 3 1 #" "
0 0 14 3 7 #"example"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 5 #"given"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 7 #"comment"
0 0 2 3 1 #" "
0 0 14 3 3 #"box"
0 0 2 3 1 #" "
0 0 14 3 2 #"at"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 6 #"bottom"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 11 #"interpreter"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 5 #"gives"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 6 #"result"
0 0 2 3 1 #" "
0 0 14 3 10 #"indicative"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 7 #"dynamic"
0 0 2 3 1 #" "
0 0 14 3 8 #"binding."
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 4 #"Here"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 14 #"modifications:"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 1 #"I"
0 0 2 3 3 #"   "
0 0 14 3 9 #"Functions"
0 0 2 3 1 #" "
0 0 14 3 3 #"who"
0 0 2 3 1 #" "
0 0 14 3 3 #"had"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"table"
0 0 2 3 1 #" "
0 0 14 3 9 #"parameter"
0 0 2 3 1 #" "
0 0 14 3 7 #"removed"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 2 #"no"
0 0 2 3 1 #" "
0 0 14 3 5 #"other"
0 0 2 3 1 #" "
0 0 14 3 7 #"changes"
0 0 2 3 1 #" "
0 0 14 3 4 #"were"
0 0 2 3 1 #" "
0 0 14 3 4 #"made"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 20 3 2 #"1."
0 0 2 3 1 #" "
0 0 14 3 7 #"meaning"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 20 3 2 #"2."
0 0 2 3 1 #" "
0 0 14 3 6 #"*const"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 20 3 2 #"3."
0 0 2 3 1 #" "
0 0 14 3 6 #"*quote"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 20 3 2 #"4."
0 0 2 3 1 #" "
0 0 14 3 5 #"evcon"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 20 3 2 #"5."
0 0 2 3 1 #" "
0 0 14 3 5 #"*cond"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 20 3 2 #"6."
0 0 2 3 1 #" "
0 0 14 3 5 #"evlis"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 20 3 2 #"7."
0 0 2 3 1 #" "
0 0 14 3 12 #"*application"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 2 #"II"
0 0 2 3 2 #"  "
0 0 14 3 6 #"Helper"
0 0 2 3 1 #" "
0 0 14 3 9 #"functions"
0 0 2 3 1 #" "
0 0 15 3 3 #"for"
0 0 2 3 1 #" "
0 0 14 3 13 #"apply-closure"
0 0 2 3 1 #" "
0 0 14 3 4 #"with"
0 0 2 3 1 #" "
0 0 14 3 6 #"slight"
0 0 2 3 1 #" "
0 0 14 3 13 #"modifications"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 20 3 2 #"1."
0 0 2 3 1 #" "
0 0 14 3 10 #"formals-of"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 20 3 2 #"2."
0 0 2 3 1 #" "
0 0 14 3 7 #"body-of"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 20 3 2 #"3."
0 0 2 3 1 #" "
0 0 14 3 8 #"table-of"
0 0 2 3 1 #" "
0 0 14 3 1 #"-"
0 0 2 3 1 #" "
0 0 14 3 7 #"Removed"
0 0 2 3 1 #" "
0 0 14 3 4 #"this"
0 0 2 3 1 #" "
0 0 14 3 8 #"function"
0 0 2 3 1 #" "
0 0 14 3 9 #"entirely."
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 3 #"III"
0 0 2 3 1 #" "
0 0 14 3 4 #"Core"
0 0 2 3 1 #" "
0 0 14 3 7 #"changes"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 20 3 2 #"1."
0 0 2 3 1 #" "
0 0 14 3 7 #"*lambda"
0 0 2 3 7 #"       "
0 0 14 3 1 #"-"
0 0 2 3 1 #" "
0 0 14 3 8 #"Modified"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 6 #"remove"
0 0 2 3 1 #" "
0 0 14 3 5 #"table"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 6 #"return"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 7 #"closure"
0 0 2 3 1 #" "
0 0 14 3 7 #"without"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 5 #"table"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 14 3 5 #"given"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 8 #"Problem."
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 20 3 2 #"2."
0 0 2 3 1 #" "
0 0 14 3 13 #"apply-closure"
0 0 2 3 1 #" "
0 0 14 3 1 #"-"
0 0 2 3 1 #" "
0 0 14 3 4 #"This"
0 0 2 3 1 #" "
0 0 14 3 8 #"function"
0 0 2 3 1 #" "
0 0 14 3 4 #"does"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 4 #"take"
0 0 2 3 1 #" "
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 14 3 3 #"use"
0 0 2 3 1 #" "
0 0 14 3 8 #"closures"
0 0 2 3 1 #" "
0 0 14 3 3 #"but"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"name"
0 0 2 3 1 #" "
0 0 14 3 3 #"has"
0 0 2 3 1 #" "
0 0 14 3 5 #"still"
0 0 2 3 1 #" "
0 0 14 3 4 #"been"
0 0 2 3 1 #" "
0 0 14 3 4 #"left"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"same."
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 20 3 2 #"3."
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 9 #"         "
0 0 14 3 1 #"-"
0 0 2 3 1 #" "
0 0 14 3 1 #"A"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 14 3 5 #"table"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"has"
0 0 2 3 1 #" "
0 0 14 3 4 #"been"
0 0 2 3 1 #" "
0 0 15 3 7 #"defined"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"which"
0 0 2 3 1 #" "
0 0 14 3 4 #"will"
0 0 2 3 1 #" "
0 0 14 3 3 #"act"
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 6 #"global"
0 0 2 3 1 #" "
0 0 14 3 11 #"environment"
0 0 2 3 1 #" "
0 0 15 3 3 #"for"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 12 #"interpreter."
0 0 2 3 1 #" "
0 0 14 3 1 #"I"
0 0 2 3 1 #" "
0 0 14 3 4 #"have"
0 0 2 3 1 #" "
0 0 15 3 7 #"defined"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 6 #"global"
0 0 2 3 1 #" "
0 0 14 3 11 #"environment"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"but"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 5 #"could"
0 0 2 3 1 #" "
0 0 14 3 4 #"also"
0 0 2 3 1 #" "
0 0 14 3 2 #"be"
0 0 2 3 1 #" "
0 0 14 3 6 #"hidden"
0 0 2 3 1 #" "
0 0 14 3 2 #"by"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 8 #"wrapping"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 8 #"function"
0 0 2 3 1 #" "
0 0 14 3 6 #"around"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"whole"
0 0 2 3 1 #" "
0 0 14 3 11 #"interpreter"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 15 3 8 #"defining"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 7 #"inside."
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 20 3 2 #"4."
0 0 2 3 1 #" "
0 0 14 3 11 #"*identifier"
0 0 2 3 3 #"   "
0 0 14 3 1 #"-"
0 0 2 3 1 #" "
0 0 14 3 5 #"Since"
0 0 2 3 1 #" "
0 0 14 3 5 #"there"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"no"
0 0 2 3 1 #" "
0 0 14 3 5 #"table"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"table"
0 0 2 3 1 #" "
0 0 14 3 9 #"parameter"
0 0 2 3 1 #" "
0 0 14 3 3 #"has"
0 0 2 3 1 #" "
0 0 14 3 4 #"been"
0 0 2 3 1 #" "
0 0 14 3 7 #"removed"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 3 #"was"
0 0 2 3 1 #" "
0 0 15 3 3 #"for"
0 0 2 3 1 #" "
0 0 14 3 5 #"Group"
0 0 2 3 1 #" "
0 0 14 3 2 #"I."
0 0 2 3 1 #" "
0 0 14 3 3 #"But"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 4 #"this"
0 0 2 3 1 #" "
0 0 14 3 8 #"function"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"only"
0 0 2 3 1 #" "
0 0 14 3 8 #"function"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 5 #"looks"
0 0 2 3 1 #" "
0 0 14 3 2 #"up"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 17 #"table/environment"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"which"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"now"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 5 #"stack"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 2 #"so"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"changes"
0 0 2 3 1 #" "
0 0 14 3 4 #"were"
0 0 2 3 1 #" "
0 0 14 3 4 #"made"
0 0 2 3 1 #" "
0 0 14 3 11 #"accordingly"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 4 #"look"
0 0 2 3 1 #" "
0 0 14 3 2 #"up"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 6 #"stack."
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 3 #"For"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 13 #"modifications"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 5 #"Group"
0 0 2 3 1 #" "
0 0 14 3 1 #"I"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 9 #"functions"
0 0 2 3 1 #" "
0 0 14 3 6 #"behave"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"same"
0 0 2 3 1 #" "
0 0 14 3 4 #"way."
0 0 2 3 1 #" "
0 0 14 3 4 #"Only"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"table"
0 0 2 3 1 #" "
0 0 14 3 9 #"parameter"
0 0 2 3 1 #" "
0 0 14 3 3 #"has"
0 0 2 3 1 #" "
0 0 14 3 4 #"been"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 8 #"removed."
0 0 2 3 1 #" "
0 0 14 3 3 #"The"
0 0 2 3 1 #" "
0 0 14 3 4 #"goal"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 4 #"make"
0 0 2 3 1 #" "
0 0 14 3 3 #"all"
0 0 2 3 1 #" "
0 0 14 3 9 #"functions"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 6 #"modify"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"table"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"which"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 4 #"only"
0 0 2 3 1 #" "
0 0 14 3 13 #"apply-closure"
0 0 22 3 1 #")"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 6 #"modify"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"table"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 3 #"way"
0 0 2 3 1 #" "
0 0 14 3 2 #"so"
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 9 #"implement"
0 0 2 3 1 #" "
0 0 14 3 7 #"dynamic"
0 0 2 3 1 #" "
0 0 14 3 8 #"binding."
0 0 2 3 1 #" "
0 0 14 3 3 #"And"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 4 #"make"
0 0 2 3 1 #" "
0 0 14 3 3 #"all"
0 0 2 3 1 #" "
0 0 14 3 9 #"functions"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 4 #"call"
0 0 2 3 1 #" "
0 0 14 3 15 #"lookup-in-table"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 4 #"find"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 8 #"bindings"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"table"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"which"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 4 #"only"
0 0 2 3 1 #" "
0 0 14 3 11 #"*identifier"
0 0 22 3 1 #")"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"find"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 8 #"bindings"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 3 #"new"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 10 #"correctly."
0 0 2 3 1 #" "
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 1 #"I"
0 0 2 3 1 #" "
0 0 14 3 3 #"can"
0 0 2 3 1 #" "
0 0 14 3 4 #"show"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 8 #"function"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 8 #"modifies"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 11 #"table/stack"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 8 #"modifies"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 9 #"correctly"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 3 #"all"
0 0 2 3 1 #" "
0 0 14 3 5 #"other"
0 0 2 3 1 #" "
0 0 14 3 9 #"functions"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 8 #"depended"
0 0 2 3 1 #" "
0 0 14 3 2 #"on"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"table"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"will"
0 0 2 3 1 #" "
0 0 14 3 4 #"work"
0 0 2 3 1 #" "
0 0 14 3 9 #"correctly"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 7 #"because"
0 0 2 3 1 #" "
0 0 15 3 4 #"when"
0 0 2 3 1 #" "
0 0 14 3 4 #"they"
0 0 2 3 1 #" "
0 0 14 3 6 #"lookup"
0 0 2 3 1 #" "
0 0 14 3 8 #"bindings"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"table"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"through"
0 0 2 3 1 #" "
0 0 14 3 11 #"*identifier"
0 0 22 3 1 #")"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 11 #"*identifier"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 4 #"will"
0 0 2 3 1 #" "
0 0 14 3 4 #"find"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"correct"
0 0 2 3 1 #" "
0 0 14 3 7 #"binding"
0 0 2 3 1 #" "
0 0 15 3 3 #"for"
0 0 2 3 1 #" "
0 0 14 3 5 #"them."
0 0 2 3 1 #" "
0 0 14 3 9 #"Therefore"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"after"
0 0 2 3 1 #" "
0 0 14 3 7 #"showing"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 9 #"functions"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 5 #"Group"
0 0 2 3 1 #" "
0 0 14 3 2 #"II"
0 0 2 3 1 #" "
0 0 14 3 3 #"are"
0 0 2 3 1 #" "
0 0 14 3 7 #"working"
0 0 2 3 1 #" "
0 0 14 3 9 #"correctly"
0 0 26 3 1 #","
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 1 #"I"
0 0 2 3 1 #" "
0 0 14 3 4 #"just"
0 0 2 3 1 #" "
0 0 14 3 4 #"need"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 4 #"show"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 9 #"functions"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 5 #"Group"
0 0 2 3 1 #" "
0 0 14 3 3 #"III"
0 0 2 3 1 #" "
0 0 14 3 4 #"work"
0 0 2 3 1 #" "
0 0 14 3 9 #"correctly"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 9 #"implement"
0 0 2 3 1 #" "
0 0 14 3 7 #"dynamic"
0 0 2 3 1 #" "
0 0 14 3 7 #"binding"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 5 #"prove"
0 0 2 3 1 #" "
0 0 14 3 2 #"my"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 13 #"modifications"
0 0 2 3 1 #" "
0 0 14 3 8 #"correct."
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 5 #"Group"
0 0 2 3 1 #" "
0 0 14 3 2 #"II"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 11 #"Correctness"
0 0 2 3 1 #" "
0 0 15 3 3 #"for"
0 0 2 3 1 #" "
0 0 14 3 4 #"this"
0 0 2 3 1 #" "
0 0 14 3 6 #"simply"
0 0 2 3 1 #" "
0 0 14 3 7 #"follows"
0 0 2 3 1 #" "
0 0 14 3 4 #"from"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 13 #"modifications"
0 0 2 3 1 #" "
0 0 14 3 4 #"made"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 14 #"apply-closure."
0 0 2 3 1 #" "
0 0 14 3 5 #"Since"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"there"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 7 #"closure"
0 0 2 3 1 #" "
0 0 14 3 6 #"record"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 4 #"will"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 7 #"contain"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 10 #"contextual"
0 0 2 3 1 #" "
0 0 14 3 5 #"table"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 7 #"*lambda"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 8 #"expected"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 6 #"return"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 14 3 10 #"containing"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"formals"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"body"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 15 3 6 #"lambda"
0 0 2 3 1 #" "
0 0 14 3 5 #"form."
0 0 2 3 1 #" "
0 0 14 3 9 #"Therefore"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 10 #"formals-of"
0 0 2 3 1 #" "
0 0 14 3 3 #"has"
0 0 2 3 1 #" "
0 0 14 3 4 #"been"
0 0 2 3 1 #" "
0 0 14 3 8 #"modified"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 6 #"return"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"first"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 4 #"this"
0 0 2 3 1 #" "
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 7 #"body-of"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 6 #"return"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 6 #"second"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 4 #"this"
0 0 2 3 1 #" "
0 0 14 3 5 #"last."
0 0 2 3 1 #" "
0 0 14 3 5 #"There"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"no"
0 0 2 3 1 #" "
0 0 14 3 4 #"need"
0 0 2 3 1 #" "
0 0 15 3 3 #"for"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 8 #"table-of"
0 0 2 3 1 #" "
0 0 14 3 8 #"function"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 3 #"has"
0 0 2 3 1 #" "
0 0 14 3 4 #"been"
0 0 2 3 1 #" "
0 0 14 3 7 #"removed"
0 0 2 3 1 #" "
0 0 14 3 9 #"entirely."
0 0 2 3 1 #" "
0 0 14 3 5 #"These"
0 0 2 3 1 #" "
0 0 14 3 9 #"functions"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 3 #"are"
0 0 2 3 1 #" "
0 0 14 3 4 #"only"
0 0 2 3 1 #" "
0 0 14 3 4 #"used"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 13 #"apply-closure"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 4 #"were"
0 0 2 3 1 #" "
0 0 14 3 8 #"modified"
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 6 #"result"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"changes"
0 0 2 3 1 #" "
0 0 14 3 4 #"made"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 14 #"apply-closure."
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 5 #"Group"
0 0 2 3 1 #" "
0 0 14 3 3 #"III"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 11 #"Correctness"
0 0 2 3 1 #" "
0 0 15 3 3 #"for"
0 0 2 3 1 #" "
0 0 14 3 9 #"functions"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 4 #"this"
0 0 2 3 1 #" "
0 0 14 3 5 #"group"
0 0 2 3 1 #" "
0 0 14 3 4 #"form"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"core"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 14 #"implementation"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 7 #"dynamic"
0 0 2 3 1 #" "
0 0 14 3 7 #"binding"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 15 3 3 #"for"
0 0 2 3 1 #" "
0 0 14 3 7 #"showing"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 11 #"correctness"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 11 #"interpreter"
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 6 #"whole."
0 0 2 3 1 #" "
0 0 14 3 5 #"First"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 13 #"modifications"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 7 #"*lambda"
0 0 2 3 1 #" "
0 0 14 3 3 #"are"
0 0 2 3 1 #" "
0 0 14 3 7 #"exactly"
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 14 3 5 #"given"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 14 #"specifications"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 8 #"problem."
0 0 2 3 1 #" "
0 0 14 3 5 #"Given"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 15 3 6 #"lambda"
0 0 2 3 1 #" "
0 0 14 3 10 #"expression"
0 0 2 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 2 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 14 3 5 #"whose"
0 0 2 3 1 #" "
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 6 #"formal"
0 0 2 3 1 #" "
0 0 14 3 10 #"parameters"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 5 #"whose"
0 0 2 3 1 #" "
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"body."
0 0 2 3 1 #" "
0 0 14 3 11 #"Maintaining"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"earlier"
0 0 2 3 1 #" "
0 0 14 3 10 #"convention"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 5 #"built"
0 0 2 3 1 #" "
0 0 14 3 5 #"whose"
0 0 2 3 1 #" "
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 13 #"non-primitive"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 5 #"whose"
0 0 2 3 1 #" "
0 0 14 3 4 #"cadr"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 2 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 26 3 1 #"."
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 2 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 3 #"new"
0 0 2 3 1 #" "
0 0 14 3 4 #"form"
0 0 2 3 1 #" "
0 0 14 3 8 #"returned"
0 0 2 3 1 #" "
0 0 14 3 7 #"instead"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 8 #"closure."
0 0 2 3 1 #" "
0 0 14 3 11 #"Correctness"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 6 #"simply"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 6 #"matter"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 9 #"verifying"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"code"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 6 #"seeing"
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"changes"
0 0 2 3 1 #" "
0 0 14 3 4 #"made"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 7 #"*lambda"
0 0 2 3 1 #" "
0 0 14 3 3 #"are"
0 0 2 3 1 #" "
0 0 14 3 7 #"exactly"
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 14 3 5 #"given"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"problem"
0 0 2 3 1 #" "
0 0 14 3 13 #"specification"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 5 #"which"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 3 #"is."
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 8 #"contains"
0 0 2 3 1 #" "
0 0 14 3 3 #"all"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 8 #"bindings"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"current"
0 0 2 3 1 #" "
0 0 14 3 11 #"environment"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 11 #"constructed"
0 0 2 3 1 #" "
0 0 14 3 2 #"so"
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 9 #"implement"
0 0 2 3 1 #" "
0 0 14 3 7 #"dynamic"
0 0 2 3 1 #" "
0 0 14 3 7 #"binding"
0 0 26 3 1 #","
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 1 #"I"
0 0 2 3 1 #" "
0 0 14 3 5 #"first"
0 0 2 3 1 #" "
0 0 14 3 5 #"argue"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 11 #"*identifier"
0 0 2 3 1 #" "
0 0 14 3 5 #"works"
0 0 2 3 1 #" "
0 0 14 3 10 #"correctly."
0 0 2 3 1 #" "
0 0 14 3 2 #"As"
0 0 2 3 1 #" "
0 0 14 3 9 #"explained"
0 0 2 3 1 #" "
0 0 14 3 10 #"previously"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 15 3 7 #"defined"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 6 #"global"
0 0 2 3 1 #" "
0 0 14 3 11 #"environment"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 11 #"*identifier"
0 0 2 3 1 #" "
0 0 14 3 3 #"has"
0 0 2 3 1 #" "
0 0 14 3 6 #"access"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 3 #"it."
0 0 2 3 1 #" "
0 0 14 3 9 #"Therefore"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"table"
0 0 2 3 1 #" "
0 0 14 3 9 #"parameter"
0 0 2 3 1 #" "
0 0 14 3 3 #"has"
0 0 2 3 1 #" "
0 0 14 3 4 #"been"
0 0 2 3 1 #" "
0 0 14 3 7 #"removed"
0 0 2 3 1 #" "
0 0 14 3 4 #"from"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 8 #"previous"
0 0 2 3 1 #" "
0 0 14 3 14 #"implementation"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 12 #"*identifier."
0 0 2 3 1 #" "
0 0 14 3 3 #"Now"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 7 #"instead"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 7 #"calling"
0 0 2 3 1 #" "
0 0 14 3 15 #"lookup-in-table"
0 0 2 3 1 #" "
0 0 14 3 4 #"with"
0 0 2 3 1 #" "
0 0 14 3 5 #"table"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"input"
0 0 2 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 6 #"simply"
0 0 2 3 1 #" "
0 0 14 3 5 #"calls"
0 0 2 3 1 #" "
0 0 14 3 15 #"lookup-in-table"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 4 #"with"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"input"
0 0 2 3 1 #" "
0 0 14 3 2 #"e."
0 0 2 3 1 #" "
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 11 #"implemented"
0 0 2 3 1 #" "
0 0 14 3 9 #"correctly"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"with"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"same"
0 0 2 3 1 #" "
0 0 14 3 4 #"form"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 8 #"elements"
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 3 #"old"
0 0 2 3 1 #" "
0 0 14 3 5 #"table"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 7 #"entries"
0 0 22 3 1 #")"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 5 #"since"
0 0 2 3 1 #" "
0 0 14 3 15 #"lookup-in-table"
0 0 2 3 1 #" "
0 0 14 3 5 #"works"
0 0 2 3 1 #" "
0 0 14 3 9 #"correctly"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 11 #"*identifier"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"first"
0 0 2 3 1 #" "
0 0 14 3 7 #"binding"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 1 #"e"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 6 #"stack."
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 2 #"To"
0 0 2 3 1 #" "
0 0 14 3 4 #"show"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 13 #"apply-closure"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 3 #"new"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 4 #"work"
0 0 2 3 1 #" "
0 0 14 3 9 #"correctly"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"context"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 7 #"dynamic"
0 0 2 3 1 #" "
0 0 14 3 7 #"binding"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 6 #"before"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 8 #"function"
0 0 2 3 1 #" "
0 0 14 3 11 #"application"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 9 #"evaluated"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 7 #"formals"
0 0 2 3 1 #" "
0 0 14 3 3 #"are"
0 0 2 3 1 #" "
0 0 14 3 5 #"bound"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 7 #"actuals"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 6 #"global"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 8 #"function"
0 0 2 3 1 #" "
0 0 14 3 11 #"application"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 9 #"evaluated"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 4 #"this"
0 0 2 3 1 #" "
0 0 14 3 3 #"new"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 8 #"bindings"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 4 #"were"
0 0 2 3 1 #" "
0 0 14 3 4 #"just"
0 0 2 3 1 #" "
0 0 14 3 6 #"pushed"
0 0 2 3 1 #" "
0 0 14 3 4 #"onto"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"are"
0 0 2 3 1 #" "
0 0 14 3 6 #"popped"
0 0 2 3 1 #" "
0 0 14 3 4 #"from"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 5 #"after"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 11 #"application"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 9 #"finished."
0 0 2 3 1 #" "
0 0 14 3 3 #"The"
0 0 2 3 1 #" "
0 0 14 3 3 #"key"
0 0 2 3 1 #" "
0 0 14 3 4 #"here"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 9 #"realizing"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 10 #"tls-scheme"
0 0 2 3 1 #" "
0 0 14 3 10 #"implements"
0 0 2 3 1 #" "
0 0 14 3 8 #"function"
0 0 2 3 1 #" "
0 0 14 3 11 #"application"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 7 #"exactly"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 13 #"apply-closure"
0 0 2 3 1 #" "
0 0 14 3 7 #"method."
0 0 2 3 1 #" "
0 0 14 3 3 #"Now"
0 0 2 3 1 #" "
0 0 14 3 5 #"since"
0 0 2 3 1 #" "
0 0 14 3 7 #"*lambda"
0 0 2 3 1 #" "
0 0 14 3 3 #"has"
0 0 2 3 1 #" "
0 0 14 3 4 #"been"
0 0 2 3 1 #" "
0 0 14 3 8 #"modified"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 6 #"return"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 7 #"partial"
0 0 2 3 1 #" "
0 0 14 3 7 #"closure"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 8 #"whenever"
0 0 2 3 1 #" "
0 0 14 3 13 #"apply-closure"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 6 #"called"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"from"
0 0 2 3 1 #" "
0 0 14 3 5 #"apply"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"using"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 13 #"non-primitive"
0 0 2 3 1 #" "
0 0 14 3 3 #"tag"
0 0 22 3 1 #")"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 3 #"has"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"partial"
0 0 2 3 1 #" "
0 0 14 3 7 #"closure"
0 0 2 3 1 #" "
0 0 14 3 6 #"record"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 4 #"list"
0 0 2 3 1 #" "
0 0 14 3 10 #"containing"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 7 #"meaning"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 3 1 #" "
0 0 14 3 7 #"actuals"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"from"
0 0 2 3 1 #" "
0 0 14 3 5 #"evlis"
0 0 22 3 1 #")"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"both"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 5 #"which"
0 0 2 3 1 #" "
0 0 14 3 4 #"have"
0 0 2 3 1 #" "
0 0 14 3 4 #"been"
0 0 2 3 1 #" "
0 0 14 3 6 #"argued"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 4 #"work"
0 0 2 3 1 #" "
0 0 14 3 10 #"correctly."
0 0 2 3 1 #" "
0 0 14 3 9 #"Therefore"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 9 #"implement"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 7 #"dynamic"
0 0 2 3 1 #" "
0 0 14 3 7 #"binding"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"after"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 8 #"creation"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"initial"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"which"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 5 #"empty"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 4 #"this"
0 0 2 3 1 #" "
0 0 14 3 8 #"function"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 4 #"only"
0 0 2 3 1 #" "
0 0 14 3 4 #"this"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 8 #"function"
0 0 2 3 1 #" "
0 0 14 3 5 #"where"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"changes"
0 0 2 3 1 #" "
0 0 14 3 4 #"have"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 2 #"be"
0 0 2 3 1 #" "
0 0 14 3 5 #"made."
0 0 2 3 1 #" "
0 0 14 3 4 #"Note"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 5 #"these"
0 0 2 3 1 #" "
0 0 14 3 5 #"three"
0 0 2 3 1 #" "
0 0 14 3 5 #"basic"
0 0 2 3 1 #" "
0 0 14 3 5 #"steps"
0 0 2 3 1 #" "
0 0 14 3 4 #"have"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 2 #"be"
0 0 2 3 1 #" "
0 0 14 3 12 #"accomplished"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 13 #"apply-closure"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 4 #"this"
0 0 2 3 1 #" "
0 0 14 3 9 #"following"
0 0 2 3 1 #" "
0 0 14 3 9 #"sequence:"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 20 3 2 #"1."
0 0 2 3 1 #" "
0 0 14 3 4 #"Push"
0 0 2 3 1 #" "
0 0 14 3 4 #"onto"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 3 #"new"
0 0 2 3 1 #" "
0 0 14 3 5 #"entry"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 10 #"consisting"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 8 #"bindings"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"formals"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"formals-of"
0 0 2 3 1 #" "
0 0 14 3 7 #"closure"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"actuals"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 4 #"vals"
0 0 22 3 1 #")"
0 0 26 3 1 #"."
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 20 3 2 #"2."
0 0 2 3 1 #" "
0 0 14 3 8 #"Evaluate"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"meaning"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"body-of"
0 0 2 3 1 #" "
0 0 14 3 7 #"closure"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 20 3 2 #"3."
0 0 2 3 1 #" "
0 0 14 3 3 #"Pop"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"entry"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 3 #"was"
0 0 2 3 1 #" "
0 0 14 3 4 #"just"
0 0 2 3 1 #" "
0 0 14 3 6 #"placed"
0 0 2 3 1 #" "
0 0 14 3 4 #"onto"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 7 #"leaving"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 3 #"was"
0 0 2 3 1 #" "
0 0 14 3 5 #"right"
0 0 2 3 1 #" "
0 0 14 3 6 #"before"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 2 #"1."
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 14 3 5 #"these"
0 0 2 3 1 #" "
0 0 14 3 5 #"steps"
0 0 2 3 1 #" "
0 0 14 3 3 #"are"
0 0 2 3 1 #" "
0 0 14 3 9 #"performed"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 4 #"this"
0 0 2 3 1 #" "
0 0 14 3 5 #"order"
0 0 2 3 1 #" "
0 0 14 3 2 #"on"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 6 #"global"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 11 #"*identifier"
0 0 2 3 1 #" "
0 0 14 3 4 #"uses"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 5 #"looks"
0 0 2 3 1 #" "
0 0 14 3 2 #"up"
0 0 2 3 1 #" "
0 0 14 3 8 #"bindings"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"we"
0 0 2 3 1 #" "
0 0 14 3 4 #"will"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 4 #"have"
0 0 2 3 1 #" "
0 0 14 3 11 #"implemented"
0 0 2 3 1 #" "
0 0 14 3 7 #"dynamic"
0 0 2 3 1 #" "
0 0 14 3 8 #"binding."
0 0 2 3 1 #" "
0 0 14 3 6 #"Tables"
0 0 2 3 1 #" "
0 0 14 3 3 #"are"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 4 #"part"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 8 #"closures"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"most"
0 0 2 3 1 #" "
0 0 14 3 6 #"recent"
0 0 2 3 1 #" "
0 0 14 3 7 #"binding"
0 0 2 3 1 #" "
0 0 14 3 2 #"on"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 9 #"prevalent"
0 0 2 3 1 #" "
0 0 14 3 7 #"binding"
0 0 2 3 1 #" "
0 0 14 3 4 #"used"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 9 #"following"
0 0 2 3 1 #" "
0 0 14 3 10 #"evaluation"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 7 #"typical"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 7 #"dynamic"
0 0 2 3 1 #" "
0 0 14 3 6 #"scope."
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 5 #"First"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 1 #"I"
0 0 2 3 1 #" "
0 0 14 3 4 #"will"
0 0 2 3 1 #" "
0 0 14 3 4 #"show"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 5 #"these"
0 0 2 3 1 #" "
0 0 14 3 5 #"steps"
0 0 2 3 1 #" "
0 0 14 3 3 #"are"
0 0 2 3 1 #" "
0 0 14 3 9 #"performed"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"right"
0 0 2 3 1 #" "
0 0 14 3 6 #"order."
0 0 2 3 1 #" "
0 0 14 3 1 #"A"
0 0 2 3 1 #" "
0 0 14 3 6 #"simple"
0 0 2 3 1 #" "
0 0 15 3 5 #"begin"
0 0 2 3 1 #" "
0 0 14 3 4 #"with"
0 0 2 3 1 #" "
0 0 14 3 5 #"three"
0 0 2 3 1 #" "
0 0 14 3 10 #"statements"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 4 #"this"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 5 #"order"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 11 #"sufficient."
0 0 2 3 1 #" "
0 0 14 3 3 #"The"
0 0 2 3 1 #" "
0 0 14 3 5 #"issue"
0 0 2 3 1 #" "
0 0 14 3 4 #"here"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 2 #"2."
0 0 2 3 1 #" "
0 0 14 3 5 #"above"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 6 #"result"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 13 #"apply-closure"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 4 #"must"
0 0 2 3 1 #" "
0 0 14 3 2 #"be"
0 0 2 3 1 #" "
0 0 14 3 8 #"returned"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 8 #"wherever"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 3 #"was"
0 0 2 3 1 #" "
0 0 14 3 6 #"called"
0 0 2 3 1 #" "
0 0 14 3 5 #"from."
0 0 2 3 1 #" "
0 0 14 3 3 #"All"
0 0 2 3 1 #" "
0 0 14 3 5 #"these"
0 0 2 3 1 #" "
0 0 14 3 5 #"steps"
0 0 2 3 1 #" "
0 0 14 3 3 #"are"
0 0 2 3 1 #" "
0 0 14 3 9 #"necessary"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 4 #"must"
0 0 2 3 1 #" "
0 0 14 3 2 #"be"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 4 #"this"
0 0 2 3 1 #" "
0 0 14 3 6 #"order."
0 0 2 3 1 #" "
0 0 15 3 5 #"begin"
0 0 2 3 1 #" "
0 0 14 3 9 #"evaluates"
0 0 2 3 1 #" "
0 0 14 3 4 #"each"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"its"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 11 #"expressions"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 15 3 8 #"sequence"
0 0 2 3 1 #" "
0 0 14 3 5 #"while"
0 0 2 3 1 #" "
0 0 14 3 9 #"returning"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 4 #"only"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"last"
0 0 2 3 1 #" "
0 0 14 3 4 #"one."
0 0 2 3 1 #" "
0 0 14 3 9 #"Therefore"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"we"
0 0 2 3 1 #" "
0 0 14 3 4 #"must"
0 0 2 3 1 #" "
0 0 14 3 4 #"keep"
0 0 2 3 1 #" "
0 0 14 3 4 #"this"
0 0 2 3 1 #" "
0 0 14 3 5 #"order"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 3 #"but"
0 0 2 3 1 #" "
0 0 14 3 5 #"still"
0 0 2 3 1 #" "
0 0 14 3 6 #"return"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 2 #"2."
0 0 2 3 1 #" "
0 0 14 3 2 #"To"
0 0 2 3 1 #" "
0 0 15 3 2 #"do"
0 0 2 3 1 #" "
0 0 14 3 4 #"this"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 1 #"I"
0 0 2 3 1 #" "
0 0 14 3 3 #"use"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 15 3 6 #"begin0"
0 0 2 3 1 #" "
0 0 14 3 10 #"statement."
0 0 2 3 1 #" "
0 0 14 3 4 #"This"
0 0 2 3 1 #" "
0 0 14 3 9 #"statement"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 2 3 1 #" "
0 0 14 3 4 #"only"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 6 #"result"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 10 #"evaluation"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"first"
0 0 2 3 1 #" "
0 0 14 3 9 #"statement"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 15 3 8 #"sequence"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 10 #"statements"
0 0 2 3 1 #" "
0 0 14 3 5 #"while"
0 0 2 3 1 #" "
0 0 14 3 10 #"evaluating"
0 0 2 3 1 #" "
0 0 14 3 3 #"all"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 11 #"statements."
0 0 2 3 1 #" "
0 0 14 3 9 #"Therefore"
0 0 26 3 1 #","
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 7 #"perform"
0 0 2 3 1 #" "
0 0 14 3 5 #"Steps"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 20 3 1 #"2"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 20 3 1 #"3"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"while"
0 0 2 3 1 #" "
0 0 14 3 9 #"returning"
0 0 2 3 1 #" "
0 0 20 3 1 #"2"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 9 #"following"
0 0 2 3 1 #" "
0 0 14 3 9 #"statement"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 6 #"begin0"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 3 #")))"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 4 #"does"
0 0 2 3 1 #" "
0 0 14 3 7 #"exactly"
0 0 2 3 1 #" "
0 0 14 3 5 #"this."
0 0 2 3 1 #" "
0 0 14 3 2 #"To"
0 0 2 3 1 #" "
0 0 14 3 7 #"perform"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 3 #"new"
0 0 2 3 1 #" "
0 0 14 3 5 #"entry"
0 0 2 3 1 #" "
0 0 14 3 10 #"containing"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"formals-of"
0 0 2 3 1 #" "
0 0 14 3 7 #"closure"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"vals"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 7 #"created"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 7 #"current"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 8 #"extended"
0 0 2 3 1 #" "
0 0 14 3 2 #"by"
0 0 2 3 1 #" "
0 0 14 3 7 #"placing"
0 0 2 3 1 #" "
0 0 14 3 4 #"this"
0 0 2 3 1 #" "
0 0 14 3 5 #"entry"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 5 #"using"
0 0 2 3 1 #" "
0 0 14 3 4 #"set!"
0 0 2 3 1 #" "
0 0 14 3 2 #"To"
0 0 2 3 1 #" "
0 0 14 3 7 #"perform"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 1 #"2"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 7 #"meaning"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"now"
0 0 2 3 1 #" "
0 0 14 3 6 #"called"
0 0 2 3 1 #" "
0 0 14 3 2 #"on"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 2 #"e."
0 0 2 3 1 #" "
0 0 14 3 7 #"Finally"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 7 #"perform"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 1 #"3"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"set!"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 4 #"used"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 7 #"replace"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 4 #"with"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 1 #")"
0 0 26 3 1 #"."
0 0 2 3 1 #" "
0 0 14 3 4 #"This"
0 0 2 3 1 #" "
0 0 14 3 11 #"effectively"
0 0 2 3 1 #" "
0 0 14 3 7 #"removes"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"entry"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 6 #"placed"
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 2 #"1."
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 7 #"Clearly"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"steps"
0 0 2 3 1 #" "
0 0 14 3 8 #"detailed"
0 0 2 3 1 #" "
0 0 14 3 5 #"above"
0 0 2 3 1 #" "
0 0 14 3 3 #"are"
0 0 2 3 1 #" "
0 0 14 3 9 #"performed"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"right"
0 0 2 3 1 #" "
0 0 14 3 5 #"order"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 1 #"2"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 6 #"result"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 9 #"correctly"
0 0 2 3 1 #" "
0 0 14 3 9 #"returned."
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 7 #"However"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"since"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 1 #"2"
0 0 2 3 1 #" "
0 0 14 3 6 #"itself"
0 0 2 3 1 #" "
0 0 14 3 3 #"can"
0 0 2 3 1 #" "
0 0 14 3 5 #"cause"
0 0 2 3 1 #" "
0 0 14 3 7 #"changes"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 14 3 5 #"there"
0 0 2 3 1 #" "
0 0 14 3 3 #"are"
0 0 2 3 1 #" "
0 0 14 3 8 #"function"
0 0 2 3 1 #" "
0 0 14 3 12 #"applications"
0 0 2 3 1 #" "
0 0 14 3 6 #"within"
0 0 2 3 1 #" "
0 0 14 3 1 #"e"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 5 #"clear"
0 0 2 3 1 #" "
0 0 14 3 4 #"what"
0 0 2 3 1 #" "
0 0 14 3 8 #"happens."
0 0 2 3 1 #" "
0 0 14 3 1 #"I"
0 0 2 3 1 #" "
0 0 14 3 4 #"need"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 4 #"show"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 15 3 3 #"for"
0 0 2 3 1 #" "
0 0 14 3 4 #"some"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 6 #"exists"
0 0 2 3 1 #" "
0 0 14 3 6 #"before"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 14 3 6 #"causes"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 14 3 5 #"entry"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 2 #"be"
0 0 2 3 1 #" "
0 0 14 3 6 #"placed"
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 5 #"after"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 1 #"3"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"very"
0 0 2 3 1 #" "
0 0 14 3 4 #"same"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 3 #"was"
0 0 2 3 1 #" "
0 0 14 3 5 #"there"
0 0 2 3 1 #" "
0 0 14 3 6 #"before"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 2 #"1."
0 0 2 3 1 #" "
0 0 14 3 2 #"To"
0 0 2 3 1 #" "
0 0 15 3 2 #"do"
0 0 2 3 1 #" "
0 0 14 3 2 #"so"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 1 #"I"
0 0 2 3 1 #" "
0 0 14 3 3 #"use"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 14 3 9 #"inductive"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 8 #"argument"
0 0 2 3 1 #" "
0 0 14 3 5 #"where"
0 0 2 3 1 #" "
0 0 14 3 1 #"I"
0 0 2 3 1 #" "
0 0 14 3 6 #"induct"
0 0 2 3 1 #" "
0 0 14 3 2 #"on"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 6 #"number"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 8 #"function"
0 0 2 3 1 #" "
0 0 14 3 12 #"applications"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"body-of"
0 0 2 3 1 #" "
0 0 14 3 7 #"closure"
0 0 22 3 1 #")"
0 0 26 3 1 #"."
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 4 #"Base"
0 0 2 3 1 #" "
0 0 14 3 5 #"Case:"
0 0 2 3 1 #" "
0 0 14 3 2 #"If"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"body-of"
0 0 2 3 1 #" "
0 0 14 3 7 #"closure"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 3 #"has"
0 0 2 3 1 #" "
0 0 14 3 2 #"no"
0 0 2 3 1 #" "
0 0 14 3 8 #"function"
0 0 2 3 1 #" "
0 0 14 3 12 #"applications"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 13 #"apply-closure"
0 0 2 3 1 #" "
0 0 14 3 4 #"will"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 2 #"be"
0 0 2 3 1 #" "
0 0 14 3 6 #"called"
0 0 2 3 1 #" "
0 0 14 3 5 #"while"
0 0 2 3 1 #" "
0 0 14 3 10 #"evaluating"
0 0 2 29 1 #"\n"
0 0 2 3 13 #"             "
0 0 22 3 1 #"("
0 0 14 3 7 #"meaning"
0 0 2 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 26 3 1 #"."
0 0 2 3 1 #" "
0 0 14 3 5 #"Since"
0 0 2 3 1 #" "
0 0 14 3 13 #"apply-closure"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"only"
0 0 2 3 1 #" "
0 0 14 3 8 #"function"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 8 #"modifies"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 4 #"will"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 2 #"be"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 13 #"             "
0 0 14 3 8 #"modified"
0 0 2 3 1 #" "
0 0 15 3 4 #"when"
0 0 2 3 1 #" "
0 0 14 3 10 #"evaluating"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"meaning"
0 0 2 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 26 3 1 #"."
0 0 2 3 1 #" "
0 0 14 3 3 #"Now"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"after"
0 0 2 3 1 #" "
0 0 14 3 7 #"placing"
0 0 2 3 1 #" "
0 0 14 3 2 #"an"
0 0 2 3 1 #" "
0 0 14 3 5 #"entry"
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 13 #"             "
0 0 14 3 7 #"calling"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"meaning"
0 0 2 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 1 #"2"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 5 #"clear"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 3 #"has"
0 0 2 3 1 #" "
0 0 14 3 3 #"not"
0 0 2 3 1 #" "
0 0 14 3 7 #"changed"
0 0 2 3 1 #" "
0 0 14 3 4 #"from"
0 0 2 3 1 #" "
0 0 14 3 5 #"after"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 6 #"before"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 2 #"3."
0 0 2 29 1 #"\n"
0 0 2 3 13 #"             "
0 0 14 3 3 #"Now"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 9 #"replacing"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 4 #"with"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 9 #"preserves"
0 0 2 3 1 #" "
0 0 14 3 4 #"what"
0 0 2 3 1 #" "
0 0 14 3 3 #"was"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 6 #"before"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 14 3 7 #"needed."
0 0 2 3 1 #" "
0 0 14 3 1 #"I"
0 0 2 3 1 #" "
0 0 14 3 4 #"call"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 13 #"             "
0 0 14 3 4 #"base"
0 0 2 3 1 #" "
0 0 15 3 4 #"case"
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 14 3 6 #"having"
0 0 2 3 1 #" "
0 0 14 3 3 #"ONE"
0 0 2 3 1 #" "
0 0 14 3 8 #"function"
0 0 2 3 1 #" "
0 0 14 3 11 #"application"
0 0 2 3 1 #" "
0 0 14 3 11 #"altogether."
0 0 2 29 1 #"\n"
0 0 2 3 13 #"             "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 4 #"Ind."
0 0 2 3 1 #" "
0 0 14 3 3 #"Hyp"
0 0 2 3 1 #" "
0 0 14 3 1 #":"
0 0 2 3 1 #" "
0 0 14 3 3 #"For"
0 0 2 3 1 #" "
0 0 14 3 3 #"all"
0 0 2 3 1 #" "
0 0 14 3 1 #"e"
0 0 2 3 1 #" "
0 0 14 3 4 #"with"
0 0 2 3 1 #" "
0 0 14 3 1 #"k"
0 0 2 3 1 #" "
0 0 14 3 6 #"number"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 8 #"function"
0 0 2 3 1 #" "
0 0 14 3 12 #"applications"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"where"
0 0 2 3 1 #" "
0 0 14 3 1 #"k"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 4 #"less"
0 0 2 3 1 #" "
0 0 14 3 4 #"than"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 6 #"number"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 8 #"function"
0 0 2 3 1 #" "
0 0 14 3 12 #"applications"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 29 1 #"\n"
0 0 2 3 13 #"             "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"body-of"
0 0 2 3 1 #" "
0 0 14 3 7 #"closure"
0 0 22 3 1 #")"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 9 #"preserved"
0 0 2 3 1 #" "
0 0 14 3 4 #"from"
0 0 2 3 1 #" "
0 0 14 3 5 #"after"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 6 #"before"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 2 #"3."
0 0 2 29 1 #"\n"
0 0 2 3 13 #"             "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 4 #"Ind."
0 0 2 3 1 #" "
0 0 14 3 5 #"Step:"
0 0 2 3 1 #" "
0 0 14 3 5 #"Since"
0 0 2 3 1 #" "
0 0 14 3 1 #"I"
0 0 2 3 1 #" "
0 0 15 3 7 #"defined"
0 0 2 3 1 #" "
0 0 14 3 6 #"having"
0 0 2 3 1 #" "
0 0 14 3 2 #"no"
0 0 2 3 1 #" "
0 0 14 3 8 #"function"
0 0 2 3 1 #" "
0 0 14 3 11 #"application"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"body"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 4 #"base"
0 0 2 3 1 #" "
0 0 15 3 4 #"case"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 14 3 6 #"having"
0 0 2 3 1 #" "
0 0 14 3 3 #"ONE"
0 0 2 3 1 #" "
0 0 14 3 8 #"function"
0 0 2 29 1 #"\n"
0 0 2 3 13 #"             "
0 0 14 3 11 #"application"
0 0 2 3 1 #" "
0 0 14 3 11 #"altogether."
0 0 2 3 1 #" "
0 0 14 3 2 #"By"
0 0 2 3 1 #" "
0 0 15 3 10 #"definition"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"if"
0 0 2 3 1 #" "
0 0 14 3 2 #"we"
0 0 2 3 1 #" "
0 0 14 3 4 #"have"
0 0 2 3 1 #" "
0 0 14 3 3 #"k+1"
0 0 2 3 1 #" "
0 0 14 3 8 #"function"
0 0 2 3 1 #" "
0 0 14 3 11 #"application"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"current"
0 0 2 3 1 #" "
0 0 14 3 13 #"apply-closure"
0 0 2 29 1 #"\n"
0 0 2 3 13 #"             "
0 0 22 3 1 #"("
0 0 14 3 7 #"body-of"
0 0 2 3 1 #" "
0 0 14 3 7 #"closure"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 4 #"must"
0 0 2 3 1 #" "
0 0 14 3 4 #"have"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"k+1-1"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 14 3 2 #"or"
0 0 2 3 1 #" "
0 0 14 3 6 #"having"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 14 3 8 #"function"
0 0 2 3 1 #" "
0 0 14 3 11 #"application"
0 0 2 3 1 #" "
0 0 14 3 6 #"number"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 2 #"k."
0 0 2 3 1 #" "
0 0 14 3 2 #"By"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 2 #"IH"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 29 1 #"\n"
0 0 2 3 13 #"             "
0 0 14 3 4 #"then"
0 0 2 3 1 #" "
0 0 14 3 9 #"preserved"
0 0 2 3 1 #" "
0 0 14 3 4 #"from"
0 0 2 3 1 #" "
0 0 14 3 5 #"after"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 6 #"before"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 2 #"3."
0 0 2 3 1 #" "
0 0 14 3 9 #"Therefore"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 7 #"restore"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 9 #"condition"
0 0 2 3 1 #" "
0 0 14 3 2 #"it"
0 0 2 3 1 #" "
0 0 14 3 3 #"was"
0 0 2 29 1 #"\n"
0 0 2 3 13 #"             "
0 0 14 3 4 #"from"
0 0 2 3 1 #" "
0 0 14 3 6 #"before"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"one"
0 0 2 3 1 #" "
0 0 14 3 6 #"simply"
0 0 2 3 1 #" "
0 0 14 3 3 #"has"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 6 #"remove"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"entry"
0 0 2 3 1 #" "
0 0 14 3 6 #"placed"
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 2 #"of"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 2 #"1."
0 0 2 3 1 #" "
0 0 14 3 4 #"This"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 29 1 #"\n"
0 0 2 3 13 #"             "
0 0 14 3 12 #"accomplished"
0 0 2 3 1 #" "
0 0 14 3 2 #"by"
0 0 2 3 1 #" "
0 0 14 3 4 #"set!"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 2 #"as"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 1 #")"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 8 #"removing"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"entry"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 3 #"car"
0 0 2 3 1 #" "
0 0 14 3 4 #"from"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 2 #"1."
0 0 2 3 1 #" "
0 0 14 3 4 #"Thus"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 15 3 3 #"for"
0 0 2 3 1 #" "
0 0 14 3 3 #"all"
0 0 2 3 1 #" "
0 0 14 3 6 #"inputs"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 29 1 #"\n"
0 0 2 3 13 #"             "
0 0 14 3 13 #"apply-closure"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 9 #"preserved"
0 0 2 3 1 #" "
0 0 14 3 4 #"from"
0 0 2 3 1 #" "
0 0 14 3 6 #"before"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 2 3 1 #" "
0 0 14 3 2 #"to"
0 0 2 3 1 #" "
0 0 14 3 5 #"after"
0 0 2 3 1 #" "
0 0 14 3 4 #"Step"
0 0 2 3 1 #" "
0 0 20 3 2 #"3."
0 0 2 29 1 #"\n"
0 0 2 3 13 #"             "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 5 #"Since"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 9 #"preserved"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 14 3 5 #"Steps"
0 0 2 3 1 #" "
0 0 20 3 1 #"1"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 20 3 1 #"2"
0 0 2 3 1 #" "
0 0 14 3 3 #"and"
0 0 2 3 1 #" "
0 0 20 3 1 #"3"
0 0 2 3 1 #" "
0 0 14 3 3 #"are"
0 0 2 3 1 #" "
0 0 14 3 9 #"performed"
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 5 #"right"
0 0 2 3 1 #" "
0 0 14 3 5 #"order"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 7 #"dynamic"
0 0 2 3 1 #" "
0 0 14 3 7 #"scoping"
0 0 2 3 1 #" "
0 0 14 3 3 #"has"
0 0 2 3 1 #" "
0 0 14 3 4 #"been"
0 0 2 3 1 #" "
0 0 2 29 1 #"\n"
0 0 2 3 2 #"  "
0 0 14 3 12 #"implemented."
0 0 2 3 1 #" "
0 0 14 3 4 #"Note"
0 0 2 3 1 #" "
0 0 14 3 4 #"that"
0 0 2 3 1 #" "
0 0 14 3 5 #"after"
0 0 2 3 1 #" "
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 14 3 7 #"returns"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 5 #"stack"
0 0 26 3 1 #","
0 0 2 3 1 #" "
0 0 14 3 2 #"in"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 6 #"global"
0 0 2 3 1 #" "
0 0 14 3 11 #"environment"
0 0 2 3 1 #" "
0 0 14 3 2 #"is"
0 0 2 3 1 #" "
0 0 14 3 3 #"now"
0 0 2 3 1 #" "
0 0 14 3 3 #"the"
0 0 2 3 1 #" "
0 0 14 3 7 #"initial"
0 0 2 3 1 #" "
0 0 14 3 8 #"original"
0 0 2 3 1 #" "
0 0 14 3 6 #"stack."
0 00000000000 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 9 #"; CSc 335"
0 0 4 29 1 #"\n"
0 0 17 3 26 #"; first scheme interpreter"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 66
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 36 #"; tls-scheme, from chapter 10 of tls"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 66
#";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 34 #"; the top level of the interpreter"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 5 #"value"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 7 #"meaning"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 14 #";initial stack"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 5 #"stack"
0 0 4 3 1 #" "
0 0 22 3 3 #"())"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 5 #"build"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"s1"
0 0 4 3 1 #" "
0 0 14 3 2 #"s2"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 14 3 2 #"s1"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 14 3 2 #"s2"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 22 3 7 #"())))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 3 #"car"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 6 #"second"
0 0 4 3 1 #" "
0 0 14 3 4 #"cadr"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 5 #"third"
0 0 4 3 1 #" "
0 0 14 3 5 #"caddr"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 5 #"atom?"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 3 #"and"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"pair?"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"not"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 36 #"; environments implemented as tables"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 15 #"lookup-in-table"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 14 3 5 #"table"
0 0 4 3 1 #" "
0 0 14 3 7 #"table-f"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 5 #"table"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"table-f"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"lookup-in-entry"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 5 #"table"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 29 #"                             "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"name"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 31 #"                               "
0 0 22 3 1 #"("
0 0 14 3 15 #"lookup-in-table"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 29 1 #"\n"
0 0 4 3 48 #"                                                "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 5 #"table"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 48 #"                                                "
0 0 14 3 7 #"table-f"
0 0 22 3 7 #")))))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 12 #"extend-table"
0 0 4 3 1 #" "
0 0 14 3 4 #"cons"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 15 #"lookup-in-entry"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 14 3 5 #"entry"
0 0 4 3 1 #" "
0 0 14 3 7 #"entry-f"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 20 #"lookup-in-entry-help"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 22 3 1 #"("
0 0 14 3 5 #"names"
0 0 4 3 1 #" "
0 0 14 3 5 #"entry"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 22 3 1 #"("
0 0 14 3 6 #"values"
0 0 4 3 1 #" "
0 0 14 3 5 #"entry"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 26 #"                          "
0 0 14 3 7 #"entry-f"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 20 #"lookup-in-entry-help"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 14 3 5 #"names"
0 0 4 3 1 #" "
0 0 14 3 6 #"values"
0 0 4 3 1 #" "
0 0 14 3 7 #"entry-f"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 5 #"names"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"entry-f"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 5 #"names"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 6 #"values"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 20 #"lookup-in-entry-help"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 29 1 #"\n"
0 0 4 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 5 #"names"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 6 #"values"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 34 #"                                  "
0 0 14 3 7 #"entry-f"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 9 #"new-entry"
0 0 4 3 1 #" "
0 0 14 3 5 #"build"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 5 #"names"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"entry"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 5 #"entry"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 6 #"values"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"entry"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cadr"
0 0 4 3 1 #" "
0 0 14 3 5 #"entry"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 41 #"; ***********Took out table**************"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 7 #"meaning"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 2 #"(("
0 0 14 3 20 #"expression-to-action"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 40 #"; supporting functions for the intepeter"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 40 #"; syntax-directed dispatch on expression"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 20 #"expression-to-action"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 5 #"atom?"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"atom-to-action"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 14 #"list-to-action"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 14 #"atom-to-action"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 7 #"number?"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 6 #"*const"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 6 #"*const"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 6 #"*const"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 4 #"cons"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 6 #"*const"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 3 #"car"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 6 #"*const"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 3 #"cdr"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 6 #"*const"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 5 #"null?"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 6 #"*const"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 3 #"eq?"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 6 #"*const"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 5 #"atom?"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 6 #"*const"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 5 #"zero?"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 6 #"*const"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 4 #"add1"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 6 #"*const"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 3 #"mul"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 6 #"*const"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 4 #"sub1"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 6 #"*const"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 7 #"number?"
0 0 22 3 2 #"))"
0 0 4 3 1 #" "
0 0 14 3 6 #"*const"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 14 3 11 #"*identifier"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 14 #"list-to-action"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 5 #"atom?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 5 #"quote"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 14 3 6 #"*quote"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 15 3 6 #"lambda"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 14 3 7 #"*lambda"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 15 3 4 #"cond"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 14 3 5 #"*cond"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 14 3 12 #"*application"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 14 3 12 #"*application"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 66
#"; operational semantics -- the definitions of the action functions"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 41 #"; ***********Took out table**************"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 6 #"*const"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 7 #"number?"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"build"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 9 #"primitive"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 41 #"; ***********Took out table**************"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 6 #"*quote"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 7 #"text-of"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 7 #"text-of"
0 0 4 3 1 #" "
0 0 14 3 6 #"second"
0 0 22 3 1 #")"
0 0 4 3 2 #"  "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 41 #"; ***********Took out table**************"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 11 #"*identifier"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 15 #"lookup-in-table"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 4 3 1 #" "
0 0 14 3 5 #"stack"
0 0 4 3 1 #" "
0 0 14 3 13 #"initial-table"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 13 #"initial-table"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"name"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 22 3 6 #"()))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 40 #"; ***********Modified this**************"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 7 #"*lambda"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 5 #"build"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 13 #"non-primitive"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 40 #"; ***********Modified this**************"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 10 #"formals-of"
0 0 4 3 1 #" "
0 0 14 3 5 #"first"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 40 #"; ***********Modified this**************"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 7 #"body-of"
0 0 4 3 1 #" "
0 0 14 3 6 #"second"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 50 #"; cond is a special form that takes any number of "
0 0 4 29 1 #"\n"
0 0 17 3 52 #"; cond-lines ...  if it sees an else-line, it treats"
0 0 4 29 1 #"\n"
0 0 17 3 51 #"; that cond-line as if its question part were true."
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 41 #"; ***********Took out table**************"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 5 #"evcon"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"lines"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 5 #"else?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"question-of"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 5 #"lines"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 7 #"meaning"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"answer-of"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 5 #"lines"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 7 #"meaning"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"question-of"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 5 #"lines"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 7 #"meaning"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"answer-of"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 5 #"lines"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 16 #"                "
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"evcon"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 5 #"lines"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 5 #"else?"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 5 #"atom?"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 4 #"else"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 11 #"question-of"
0 0 4 3 1 #" "
0 0 14 3 5 #"first"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 9 #"answer-of"
0 0 4 3 1 #" "
0 0 14 3 6 #"second"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 41 #"; ***********Took out table**************"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 5 #"*cond"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 5 #"evcon"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 13 #"cond-lines-of"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 13 #"cond-lines-of"
0 0 4 3 1 #" "
0 0 14 3 3 #"cdr"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 41 #"; ***********Took out table**************"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 5 #"evlis"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 22 3 4 #"()))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"meaning"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 13 #"             "
0 0 22 3 1 #"("
0 0 14 3 5 #"evlis"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 4 #"args"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 41 #"; ***********Took out table**************"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 12 #"*application"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"e"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 5 #"apply"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 7 #"meaning"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"function-of"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 5 #"     "
0 0 22 3 1 #"("
0 0 14 3 5 #"evlis"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"arguments-of"
0 0 4 3 1 #" "
0 0 14 3 1 #"e"
0 0 22 3 5 #")))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 11 #"function-of"
0 0 4 3 1 #" "
0 0 14 3 3 #"car"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 12 #"arguments-of"
0 0 4 3 1 #" "
0 0 14 3 3 #"cdr"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 10 #"primitive?"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"l"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 9 #"primitive"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 14 #"non-primitive?"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"l"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 13 #"non-primitive"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 5 #"apply"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"fun"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 10 #"primitive?"
0 0 4 3 1 #" "
0 0 14 3 3 #"fun"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 15 #"apply-primitive"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 6 #"second"
0 0 4 3 1 #" "
0 0 14 3 3 #"fun"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 14 #"non-primitive?"
0 0 4 3 1 #" "
0 0 14 3 3 #"fun"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 13 #"apply-closure"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 6 #"second"
0 0 4 3 1 #" "
0 0 14 3 3 #"fun"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 15 #"apply-primitive"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 4 #"cons"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"second"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 3 #"car"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 3 #"cdr"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 5 #"null?"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 3 #"eq?"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"second"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 5 #"atom?"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 6 #":atom?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 5 #"zero?"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 5 #"zero?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 4 #"add1"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 4 #"add1"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 3 #"mul"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"second"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 4 #"sub1"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 4 #"sub1"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 14 3 4 #"name"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 7 #"number?"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 22 3 1 #"("
0 0 14 3 7 #"number?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"first"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 22 3 6 #"))))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 6 #":atom?"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 5 #"atom?"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#t"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 5 #"null?"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 9 #"primitive"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 20 3 2 #"#t"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 2 #"(("
0 0 14 3 3 #"eq?"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"car"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"quote"
0 0 4 3 1 #" "
0 0 14 3 13 #"non-primitive"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 7 #"       "
0 0 20 3 2 #"#t"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 4 #"else"
0 0 4 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 40 #"; ***********Modified this**************"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 4 3 1 #" "
0 0 14 3 13 #"apply-closure"
0 0 4 29 1 #"\n"
0 0 4 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"closure"
0 0 4 3 1 #" "
0 0 14 3 4 #"vals"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 5 #"begin"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 4 #"set!"
0 0 4 3 1 #" "
0 0 14 3 5 #"stack"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"extend-table"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"new-entry"
0 0 4 3 1 #" "
0 0 4 29 1 #"\n"
0 0 4 3 33 #"                                 "
0 0 22 3 1 #"("
0 0 14 3 10 #"formals-of"
0 0 4 3 1 #" "
0 0 14 3 7 #"closure"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 33 #"                                 "
0 0 14 3 4 #"vals"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 32 #"                                "
0 0 14 3 5 #"stack"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 15 3 6 #"begin0"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 7 #"meaning"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"body-of"
0 0 4 3 1 #" "
0 0 14 3 7 #"closure"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 8 #"        "
0 0 22 3 1 #"("
0 0 14 3 4 #"set!"
0 0 4 3 1 #" "
0 0 14 3 5 #"stack"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 4 3 1 #" "
0 0 14 3 5 #"stack"
0 0 22 3 4 #"))))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 17 3 10 #"; optional"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"lib"
0 0 4 3 1 #" "
0 0 19 3 10 #"\"trace.ss\""
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 7 00000000349 4 00000000000 1 00000000000 57 0 2 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"value"
0 0 2 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 3 #"   "
0 0 22 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"p"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 2 29 1 #"\n"
0 0 2 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"p"
0 0 2 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 3 #")))"
0 0 2 29 1 #"\n"
0 0 2 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 2 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 2 3 1 #" "
0 0 14 3 1 #"x"
0 0 2 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 2 3 4 #"    "
0 0 20 3 1 #"5"
0 0 22 3 2 #"))"
0 0 2 29 1 #"\n"
0 0 2 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 2 #"))"
0 00000000000 0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"display"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 2 #"q1"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"newline"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"value"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 3 #"   "
0 0 22 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"p"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 6 #"      "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"p"
0 0 4 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"a"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 4 #"    "
0 0 20 3 1 #"5"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"value"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 14 3 1 #"m"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 12 #"            "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 4 29 1 #"\n"
0 0 4 3 14 #"              "
0 0 22 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"n"
0 0 4 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"cons"
0 0 4 3 1 #" "
0 0 14 3 1 #"m"
0 0 4 3 1 #" "
0 0 14 3 1 #"n"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 19 #"                   "
0 0 20 3 1 #"5"
0 0 4 3 1 #" "
0 0 20 3 1 #"7"
0 0 22 3 3 #")))"
0 0 4 29 1 #"\n"
0 0 4 3 10 #"          "
0 0 20 3 1 #"1"
0 0 4 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 5 #"value"
0 0 4 3 1 #" "
0 0 20 3 1 #"'"
0 0 22 3 2 #"(("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 4 29 1 #"\n"
0 0 4 3 11 #"           "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 4 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 22 3 1 #"("
0 0 15 3 6 #"lambda"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 4 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"add1"
0 0 4 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 20 3 1 #"4"
0 0 22 3 2 #"))"
0 0 4 29 1 #"\n"
0 0 4 3 9 #"         "
0 0 4 29 1 #"\n"
0 0 4 29 1 #"\n"
0 00000000000
